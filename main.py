from __future__ import print_function

import asyncio
import json
import datetime
import random
import asyncio
import time

import aioschedule
from aiogram import Bot, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import Dispatcher, FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ParseMode
from aiogram.utils.executor import start_polling
from aiogram import Bot, types
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton, ParseMode, ContentType
from os import listdir
import os
import schedule
import base64
from db import global_init, create_session, User, Poses, Order, Paid_game, Purchased_game, Paid_game_info_1, \
    Paid_game_info_2, Paid_game_info_3, Paid_game_info_4, Paid_game_info_5, Paid_game_info_6, Paid_game_info_7, \
    Free_game, Present, Open_poses, For_paid_game_info_1, Progress, For_paid_game_info_2, For_paid_game_info_6, \
    Paid_game_info_8, Paid_game_info_9, Paid_game_info_10, Paid_game_info_11, For_paid_game_info_9

from db import create_session, Order, User, Promocode
from promocodes import buy_promocode, get_promocodes
from orders import get_orders_from_spreadsheet, update_orders, get_coins_from_order

#
TOKEN = "token"
payment_token = "pay_token"
bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
reg_kl = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True).add(KeyboardButton('–ú—É–∂—á–∏–Ω–∞ üë®'),
                                                                    KeyboardButton('–ñ–µ–Ω—â–∏–Ω–∞ üë©'))
markup_request = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).add(
    KeyboardButton('–ó–∞—Å–µ–∫—Ä–µ—Ç–∏—Ç—å –Ω–æ–º–µ—Ä üïµ')).add(
    KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º ‚òéÔ∏è', request_contact=True))

PRICE_SUB = types.LabeledPrice(label='–ö—É–ø–∏—Ç—å –≤—Å—ë ü§ë', amount=990_00)
prices = [
    types.LabeledPrice(label='100 sex-coin', amount=50_00),
    types.LabeledPrice(label='200 sex-coin', amount=100_00),
    types.LabeledPrice(label='300 sex-coin', amount=150_00),
    types.LabeledPrice(label='400 sex-coin', amount=200_00),
    types.LabeledPrice(label='500 sex-coin', amount=250_00),
    types.LabeledPrice(label='600 sex-coin', amount=300_00),
    types.LabeledPrice(label='700 sex-coin', amount=350_00),
    types.LabeledPrice(label='800 sex-coin', amount=400_00),
    types.LabeledPrice(label='900 sex-coin', amount=450_00),
    types.LabeledPrice(label='1000 sex-coin', amount=500_00)
]
day_pose_id = 82
day_task_id = 1


def excoduc(s1, s2):
    if s1 == s2:
        return '–ù–∏—á—å—è ü§ù'
    elif s1 > s2:
        return '–í—ã –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç–µ üí™'
    else:
        return '–í—ã –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç–µ ü§î'


def excoduc_name(s1, s2, name1, name2):
    if s1 == s2:
        return '–ù–∏—á—å—è ü§ù'
    elif s1 > s2:
        return f'{beatufull_str(name1)} –≤—ã–π–≥—Ä—ã–≤–∞–µ—Ç'
    else:
        return f'{beatufull_str(name2)} –≤—ã–π–≥—Ä—ã–≤–∞–µ—Ç'


def buy_all__(tg_id):
    session = create_session()
    user = session.query(User).filter(User.user_tg_id == tg_id).first()
    for i in range(11):
        paid_game_id = i + 1
        if paid_game_id == 6:
            if session.query(Purchased_game).filter(Purchased_game.user_id == user.user_tg_id).filter(
                    Purchased_game.game_id == 6).first() is None:
                for i in range(20):
                    ne = For_paid_game_info_6()
                    ne.name = session.query(Paid_game_info_6).filter(Paid_game_info_6.id == i + 1).first().dop_info
                    ne.user_tg_id = int(tg_id)
                    ne.id_from_game = 6
                    ne.do = "No"
                    ne.id_from_game = 6
                    session.add(ne)
                    session.commit()
        new_paid_game = Purchased_game()
        new_paid_game.game_id = paid_game_id
        new_paid_game.user_id = int(user.user_tg_id)
        session.add(new_paid_game)
        session.commit()
    poses = session.query(Poses).all()
    for elem in poses:
        if session.query(Open_poses).filter(Open_poses.user_id == int(user.user_tg_id)).filter(
                Open_poses.pos_id == elem.pos_id).first() is None:
            ne = Open_poses()
            ne.pos_id = elem.pos_id
            ne.name = elem.name
            ne.user_id = int(user.user_tg_id)
            ne.pos_level = elem.pos_lvl
            ne.see = "False"
            session.add(ne)
            session.commit()
    user.buy_all = 'Y'
    session.add(user)
    session.commit()


def excoduc_name_end(s1, s2, name1, name2):
    if s1 == s2:
        return '–ù–∏—á—å—è ü§ù\n\n–ü–æ–∫–∞–∂–∏—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É —Å–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è'
    elif s1 > s2:
        return f'*{beatufull_str(name1)} –≤—ã–π–≥—Ä–∞–ª*\n\n–ü—É—Å—Ç—å {beatufull_str(name1)} –ø–æ–∫–∞–∂–µ—Ç —Å–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ'
    else:
        return f'*{beatufull_str(name2)} –≤—ã–π–≥—Ä–∞–ª*\n\n–ü—É—Å—Ç—å {beatufull_str(name2)} –ø–æ–∫–∞–∂–µ—Ç —Å–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ'


async def up_balance(tg_id, summ):
    session = create_session()
    user = session.query(User).filter(User.user_tg_id == tg_id).first()
    if min(summ, min(200 - user.zar_today, 2400 - user.zar_mesyaz)) != 0:
        a = await bot.send_message(chat_id=tg_id,
                                   text=f'–ö—Ä—É—Ç–æ üÜí\n–ú—ã –Ω–∞—á–∏—Å–ª–∏–º –≤–∞–º *{min(summ, min(200 - user.zar_today, 2400 - user.zar_mesyaz))} sex-coin*',
                                   parse_mode=ParseMode.MARKDOWN)
    else:
        a = await bot.send_message(chat_id=tg_id,
                                   text=f'–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ –ø–æ –∑–∞—Ä–∞–±–æ—Ç–∫—É –∑–∞ –¥–µ–Ω—å, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å sex-coin, –ø–æ–∏–≥—Ä–∞–π—Ç–µ –∑–∞–≤—Ç—Ä–∞ üòâ',
                                   parse_mode=ParseMode.MARKDOWN)
    await asyncio.sleep(2.8)
    ism = min(summ, min(200 - user.zar_today, 2400 - user.zar_mesyaz))
    user.balance += ism
    user.zar_today += ism
    user.zar_mesyaz += ism
    session.add(user)
    session.commit()
    session.close()
    await bot.delete_message(chat_id=tg_id, message_id=a.message_id)


def up_balance_(tg_id, summ):
    session = create_session()
    user = session.query(User).filter(User.user_tg_id == tg_id).first()
    ism = min(summ, min(200 - user.zar_today, 2400 - user.zar_mesyaz))
    user.balance += ism
    user.zar_today += ism
    user.zar_mesyaz += ism
    session.add(user)
    session.commit()
    session.close()


def take_reward(tg_id):
    session = create_session()
    user = session.query(User).filter(User.user_tg_id == tg_id).first()
    start_date = datetime.datetime.strptime(user.start_date_every_day, '%d.%m.%Y')
    need_to_be_date = start_date + datetime.timedelta(days=int(user.count_day_every_day))
    today = datetime.datetime.today().date()
    if datetime.datetime.strptime(user.last_date_taked_every_day, '%d.%m.%Y').date() == today:
        session.close()
        return "–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑ –∑–∞ —Å–µ–≥–æ–¥–Ω—è üòî"
    if today.strftime("%d.%m.%Y") == need_to_be_date.strftime("%d.%m.%Y"):
        if user.count_day_every_day == 1:
            user.balance += 10
            ans = "–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10 –∫–æ–∏–Ω–æ–≤!"
        elif user.count_day_every_day == 2:
            # —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∞
            ans = "–°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∞ –±—ã–ª–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∞!"
        elif user.count_day_every_day == 3:
            user.balance += 40
            ans = "–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 40 –∫–æ–∏–Ω–æ–≤!"
        elif user.count_day_every_day == 4:
            user.balance += 100
            session.commit()
            promocode = buy_promocode(tg_id, 100)
            if promocode == "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –Ω–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤!":
                user.balance -= 100
                user.need_promocode_price = 100
            ans = promocode + "–ú—ã –ø—Ä–∏—à–ª—ë–º –≤–∞–º –ø—Ä–æ–º–æ–∫–æ–¥, –∫–æ–≥–¥–∞ –∏—Ö –¥–æ–±–∞–≤—è—Ç!"
            session.commit()
        elif user.count_day_every_day == 5:
            user.balance += 200
            session.commit()
            promocode = buy_promocode(tg_id, 200)
            if promocode == "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –Ω–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤!":
                user.balance -= 200
                user.need_promocode_price = 200
            ans = promocode + "–ú—ã –ø—Ä–∏—à–ª—ë–º –≤–∞–º –ø—Ä–æ–º–æ–∫–æ–¥, –∫–æ–≥–¥–∞ –∏—Ö –¥–æ–±–∞–≤—è—Ç!"
            session.commit()
        elif user.count_day_every_day == 6:
            # –∫–æ–ª–æ–¥–∞ —Å –ø–æ–∑–∞–º–∏
            ans = "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–æ–ª–æ–¥—É —Å –ø–æ–∑–∞–º–∏!"
        user.count_day_every_day += 1
        if user.count_day_every_day == 7:
            user.count_day_every_day = 0
    else:
        user.start_date_every_day = today.strftime("%d.%m.%Y")
        user.balance += 5
        ans = "–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 5 –∫–æ–∏–Ω–æ–≤!"
        user.count_day_every_day = 1
    user.last_date_taked_every_day = today.strftime("%d.%m.%Y")
    session.commit()
    session.close()
    return ans


def beatufull_str(s):
    return s[0].upper() + s[1:].lower()


def finish_all_game(tg_id):
    session = create_session()
    jk = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.play == 1).filter(
        For_paid_game_info_1.player1_id == tg_id).all()
    for elem in jk:
        elem.play = 0
        session.add(elem)
        session.commit()
    jk = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.play == 1).filter(
        For_paid_game_info_1.player2_id == tg_id).all()
    for elem in jk:
        elem.play = 0
        session.add(elem)
        session.commit()
    jk = session.query(For_paid_game_info_2).filter(For_paid_game_info_2.play == 1).filter(
        For_paid_game_info_2.player2_id == tg_id).all()
    for elem in jk:
        elem.play = 0
        session.add(elem)
        session.commit()
    jk = session.query(For_paid_game_info_2).filter(For_paid_game_info_2.play == 1).filter(
        For_paid_game_info_2.player1_id == tg_id).all()
    for elem in jk:
        elem.play = 0
        session.add(elem)
        session.commit()
    session.close()


def is_phone_number(s):
    #     89172663093
    s = s.replace(' ', '').replace('(', '').replace(')', '').replace('-', '').replace('+', '')
    alf = '0123456789'
    if len(s) == len('89172663093'):
        for i in s:
            if i not in alf:
                return False
        return '7' + s[1:]
    return False


def add_poses(pose_id, tg_id):
    pose_id, tg_id = int(pose_id), int(tg_id)
    session = create_session()
    pos = session.query(Poses).filter(Poses.pos_id == pose_id).first()
    if session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(
            Open_poses.pos_id == pose_id).first() is None:
        new = Open_poses()
        new.pos_id = pose_id
        new.pos_level = pos.pos_lvl
        new.name = pos.name
        new.user_id = tg_id
        new.see = "False"
        session.add(new)
        session.commit()
    session.close()


@dp.message_handler(commands=['asknjcsanljweujh'])
async def process_start_command(message: types.Message, state: FSMContext):
    if int(message.chat.id) == 415984908:
        buy_all__(963017592)
        await bot.send_message(chat_id=963017592, text="–£ –≤–∞—Å –≤—Å—ë –∫—É–ø–ª–µ–Ω–æ!")


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message, state: FSMContext):
    session = create_session()
    # t1 = time.perf_counter()
    # last = open("in_your_vlast.txt", encoding="UTF8")
    # for i in range(8):
    #     s = last.readline()
    #     n = Paid_game_info_11()
    #     n.game_id = 11
    #     n.caption = s
    #     n.dop_info = '–ù–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏:'
    #     session.add(n)
    #     session.commit()
    # for i in range(8):
    #     s = last.readline()
    #     n = Paid_game_info_11()
    #     n.game_id = 11
    #     n.caption = s
    #     n.dop_info = '–ù–µ –∫–∞—Å–∞—è—Å—å —Ä—É–∫–∞–º–∏:'
    #     session.add(n)
    #     session.commit()
    # for i in range(8):
    #     s = last.readline()
    #     n = Paid_game_info_11()
    #     n.game_id = 11
    #     n.caption = s
    #     n.dop_info = '–° –∑–∞–≤—è–∑–∞–Ω–Ω—ã–º–∏ –≥–ª–∞–∑–∞–º–∏:'
    #     session.add(n)
    #     session.commit()
    # bds = open("bdsm.txt", encoding="UTF8")
    # for i in range(10):
    #     s = bds.readline()
    #     n = Paid_game_info_9()
    #     n.game_id = 9
    #     n.caption = s
    #     n.dop_info = '–î–ª—è –Ω–µ—ë'
    #     session.add(n)
    #     session.commit()
    # for i in range(10):
    #     s = bds.readline()
    #     n = Paid_game_info_9()
    #     n.game_id = 9
    #     n.caption = s
    #     n.dop_info = '–î–ª—è –Ω–µ–≥–æ'
    #     session.add(n)
    #     session.commit()
    # sl = open('sliyanie.txt', encoding="UTF8")

    # for i in range(9):
    #     s1, s2, s3, s4 = sl.readline(), sl.readline(), sl.readline(), sl.readline()
    #     n = Paid_game_info_7()
    #     n.game_id = 7
    #     n.caption = s2
    #     n.dop_info = '–§–ª–∏—Ä—Ç'
    #     session.add(n)
    #     session.commit()
    #     n = Paid_game_info_7()
    #     n.game_id = 7
    #     n.caption = s3
    #     n.dop_info = '–°–±–ª–∏–∂–µ–Ω–∏–µ'
    #     session.add(n)
    #     session.commit()
    #     n = Paid_game_info_7()
    #     n.game_id = 7
    #     n.caption = s4
    #     n.dop_info = '–í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ'
    #     session.add(n)
    #     session.commit()
    #
    # f = open('Love.txt', encoding="UTF8")
    # for i in range(50):
    #     s = f.readline()
    #     n = Paid_game_info_1()
    #     n.game_id = 1
    #     n.caption = s
    #     session.add(n)
    #     session.commit()
    #
    # ff = open('vlast.txt', encoding="UTF8")
    # for i in range(25):
    #     s = ff.readline()
    #     n = Paid_game_info_2()
    #     n.game_id = 2
    #     n.caption = s
    #     n.dop_info = "–í–æ–ø—Ä–æ—Å—ã"
    #     session.add(n)
    #     session.commit()
    # for i in range(25):
    #     s = ff.readline()
    #     n = Paid_game_info_2()
    #     n.game_id = 2
    #     n.caption = s
    #     n.dop_info = "–î–µ–π—Å—Ç–≤–∏—è"
    #     session.add(n)
    #     session.commit()
    # f3 = open('new_sex.txt', encoding="UTF8")
    # for i in range(25):
    #     s = f3.readline()
    #
    #     ans = ''
    #     ber = False
    #     for i in s:
    #         if i == '\t':
    #             ber = True
    #         elif ber == True:
    #             ans += i
    #     n = Paid_game_info_3()
    #     n.game_id = 3
    #     n.caption = ans
    #     session.add(n)
    #     session.commit()
    # f4 = open('False.txt', encoding="UTF8")
    # for i in range(25):
    #     s = f4.readline()
    #     mas = list(map(str, s.split(' ')))
    #     ans = ''
    #     ber = False
    #     for i in s:
    #         if i == '\t':
    #             ber = True
    #         elif ber == True:
    #             ans += i
    #     n = Paid_game_info_4()
    #     n.game_id = 4
    #     n.caption = ans
    #     n.dop_info = "–ü—Ä–∞–≤–¥–∞"
    #     session.add(n)
    #     session.commit()
    #
    # for i in range(25):
    #     s = f4.readline()
    #     mas = list(map(str, s.split(' ')))
    #     ans = ''
    #     ber = False
    #     for i in s:
    #         if i == '\t':
    #             ber = True
    #         elif ber == True:
    #             ans += i
    #     n = Paid_game_info_4()
    #     n.game_id = 4
    #     n.caption = ans
    #     n.dop_info = "–ù–∞–∫–∞–∑–∞–Ω–∏–µ"
    #     session.add(n)
    #     session.commit()
    #
    # f5 = open('recept.txt', encoding="UTF8")
    #
    # for i in range(5):
    #     s = f5.readline()
    #     mas = list(map(str, s.split(' ')))
    #     ans = ''
    #     ber = False
    #     for i in s:
    #         if i == '\t':
    #             ber = True
    #         elif ber == True:
    #             ans += i
    #     n = Paid_game_info_5()
    #     n.game_id = 5
    #     n.caption = ans
    #     n.dop_info = "–ß—É–≤—Å—Ç–≤–∞_–î–µ–ª–∞–µ—Ç –æ–Ω–∞:"
    #     session.add(n)
    #     session.commit()
    #
    # for i in range(5):
    #     s = f5.readline()
    #     mas = list(map(str, s.split(' ')))
    #     ans = ''
    #     ber = False
    #     for i in s:
    #         if i == '\t':
    #             ber = True
    #         elif ber == True:
    #             ans += i
    #     n = Paid_game_info_5()
    #     n.game_id = 5
    #     n.caption = ans
    #     n.dop_info = "–ß—É–≤—Å—Ç–≤–∞_–î–µ–ª–∞–µ—Ç –æ–Ω:"
    #     session.add(n)
    #     session.commit()
    #
    # for i in range(5):
    #     s = f5.readline()
    #     mas = list(map(str, s.split(' ')))
    #     ans = ''
    #     ber = False
    #     for i in s:
    #         if i == '\t':
    #             ber = True
    #         elif ber == True:
    #             ans += i
    #     n = Paid_game_info_5()
    #     n.game_id = 5
    #     n.caption = ans
    #     n.dop_info = "–°—Ç—Ä–∞—Å—Ç—å_–î–µ–ª–∞–µ—Ç –æ–Ω–∞:"
    #     session.add(n)
    #     session.commit()
    #
    # for i in range(5):
    #     s = f5.readline()
    #     mas = list(map(str, s.split(' ')))
    #     ans = ''
    #     ber = False
    #     for i in s:
    #         if i == '\t':
    #             ber = True
    #         elif ber == True:
    #             ans += i
    #     n = Paid_game_info_5()
    #     n.game_id = 5
    #     n.caption = ans
    #     n.dop_info = "–°—Ç—Ä–∞—Å—Ç—å_–î–µ–ª–∞–µ—Ç –æ–Ω:"
    #     session.add(n)
    #     session.commit()
    #
    # for i in range(5):
    #     s = f5.readline()
    #     mas = list(map(str, s.split(' ')))
    #     ans = ''
    #     ber = False
    #     for i in s:
    #         if i == '\t':
    #             ber = True
    #         elif ber == True:
    #             ans += i
    #     n = Paid_game_info_5()
    #     n.game_id = 5
    #     n.caption = ans
    #     n.dop_info = "–†–æ–º–∞–Ω—Ç–∏–∫–∞_–î–µ–ª–∞–µ—Ç –æ–Ω–∞:"
    #     session.add(n)
    #     session.commit()
    #
    # for i in range(5):
    #     s = f5.readline()
    #     mas = list(map(str, s.split(' ')))
    #     ans = ''
    #     ber = False
    #     for i in s:
    #         if i == '\t':
    #             ber = True
    #         elif ber == True:
    #             ans += i
    #     n = Paid_game_info_5()
    #     n.game_id = 5
    #     n.caption = ans
    #     n.dop_info = "–†–æ–º–∞–Ω—Ç–∏–∫–∞_–î–µ–ª–∞–µ—Ç –æ–Ω:"
    #     session.add(n)
    #     session.commit()
    #
    # f6 = open('meet.txt', encoding="UTF8")
    # for i in range(20):
    #     s = f6.readline()
    #     n = Paid_game_info_6()
    #     n.game_id = 6
    #     n.caption = f6.readline()
    #     n.dop_info = s
    #     session.add(n)
    #     session.commit()
    # arr = os.listdir("C:\\fff\\drive-download-20220727T140354Z-001")
    # arr = sorted(arr)
    # for elem in arr:
    #     with open(f"C:\\fff\\drive-download-20220727T140354Z-001\\{elem}", "rb") as image_file:
    #         encoded_string = base64.b64encode(image_file.read())
    #         pos = Poses()
    #         f = elem.split('.')[0]
    #         pos.pos_id = int(f.split('-')[1])
    #         pos.pos_lvl = int(f.split('-')[0])
    #         pos.photo_base_64 = encoded_string
    #         session.add(pos)
    #         session.commit()
    # f = open('input.txt', encoding='UTF8')
    # alf = '0123456789'
    # mas = []
    # per = []
    # l = -1
    # st = ''
    # for j in range(551):
    #     cur = f.readline().rstrip()
    #     if len(cur) != 0:
    #         if cur[0] in alf:
    #             if l != -1:
    #                 mas.append([l, st])
    #             st = ''
    #             l = int(cur.split('.')[0])
    #             if cur.split('.')[1][0] == ' ':
    #                 st += cur.split('.')[1][1:]
    #             else:
    #                 st += cur.split('.')[1]
    #             pos = session.query(Poses).filter(Poses.pos_id == l).first()
    #             pos.name = st
    #             session.add(pos)
    #             session.commit()
    #             st = ''
    #         else:
    #             st += cur
    #     if len(st) != 0:
    #         st += '\n'
    # mas.append([l, st])
    # mas[99][1] += '\n\n'
    # for elem in mas:
    #     pos = session.query(Poses).filter(Poses.pos_id == elem[0]).first()
    #     f = elem[1].split('\n')[0].count('‚≠ê')
    #     lvl = f
    #     pos.pos_lvl = lvl
    #     stt = elem[1]
    #     stt = stt[len(elem[1].split('\n')[0]) + 1::]
    #     cap = stt
    #     pos.caption = '\n\n' + cap
    #     session.add(pos)
    #     session.commit()
    # exit(0)
    # update_orders()
    # t2 = time.perf_counter()
    # print(t2-t1)
    # exit(0)
    tg_id = message.chat.id
    user = session.query(User).filter(User.user_tg_id == tg_id).first()
    if user is None:
        await bot.send_message(chat_id=tg_id, text=""
                                                   "–ú—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –∏ –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ–º –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –Ω–æ –ª–∏—Ü–∞–º –Ω–µ –¥–æ—Å—Ç–∏–≥—à–∏—Ö —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è —Å–æ–≤–µ—Ç—É–µ–º –ø–æ–¥–æ–∂–¥–∞—Ç—å :)\n\n–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ -  –ø–æ–¥—Ç–≤–µ—Ä–¥–∏, —á—Ç–æ —Ç–µ–±–µ –µ—Å—Ç—å 18",
                               reply_markup=InlineKeyboardMarkup().add(
                                   InlineKeyboardButton("–î–∞, –º–Ω–µ –µ—Å—Ç—å 18 ‚úÖ", callback_data='poddtverchdenie')))
    else:
        if user.pol == 'None':
            await bot.send_message(tg_id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AmateurBot üëã\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª üöª',
                                   reply_markup=reg_kl)
        else:
            if True:
                a = await bot.send_message(chat_id=tg_id, reply_markup=types.ReplyKeyboardRemove(),
                                           text='–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
                user.state = ''
                session.add(user)
                session.commit()
                kl = InlineKeyboardMarkup()
                if user.pol == 'man':
                    kl.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë®", callback_data='my_profile'))
                else:
                    kl.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë©", callback_data='my_profile'))
                kl.add(InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É üéÅ', callback_data='every_day'))
                kl.add(InlineKeyboardButton('–ò–≥—Ä—ã ‚ô•Ô∏è', callback_data='game'))
                kl.add(InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è', callback_data='poses'))
                kl.add(InlineKeyboardButton('–ü—Ä–æ–º–æ–∫–æ–¥—ã üíØ', callback_data='spromo'))
                kl.add(InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üõí', callback_data='store'))
                kl.add(InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ id –∑–∞–∫–∞–∑–∞ üÜî', callback_data='zak_id'))
                kl.add(InlineKeyboardButton('–û sex-coin üìñ', url='https://telegra.ph/O-sex-coins-09-07'))
                kl.add(InlineKeyboardButton('–ü–æ–º–æ—â—å üÜò', url='https://t.me/amateur_help'))
                await bot.send_message(chat_id=tg_id,
                                       text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã\n\n–≠—Ç–æ –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∏–Ω—Ç–∏–º–Ω—ã—Ö —Å–≤—è–∑–µ–π\n–°–µ–π—á–∞—Å –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ {user.balance} sex-coins üí∏\n\n–°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â—ë –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å {min(200 - user.zar_today, 2400 - user.zar_mesyaz)} üíµ\n–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –µ—â—ë {2400 - user.zar_mesyaz} üí∞",
                                       reply_markup=kl)
                await asyncio.sleep(0.8)
                await bot.delete_message(chat_id=tg_id, message_id=a.message_id)
            else:
                await bot.delete_message(chat_id=tg_id, message_id=message.message_id)
    session.close()


@dp.message_handler(commands=['help'])
async def process_start_command(message: types.Message, state: FSMContext):
    await bot.send_message(message.chat.id, "–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ @Amateur_help")


@dp.message_handler(commands=['sbros415984908'])
async def process_start_command(message: types.Message, state: FSMContext):
    tg_id = int(message.chat.id)
    if tg_id == 415984908:
        session = create_session()
        users = session.query(User).filter(User.zar_mesyaz > 0).all()
        for i in users:
            i.zar_today = 0
            i.zar_mesyaz = 0
            session.add(i)
        session.commit()
        session.close()
        await bot.send_message(tg_id, '–í—Å—ë –æ–±–Ω—É–ª–∏–ª–∏')
    else:
        await bot.delete_message(chat_id=tg_id, message_id=message.message_id)


@dp.message_handler(commands=['add_gam_9'])
async def process_start_command(message: types.Message, state: FSMContext):
    tg_id = int(message.chat.id)
    if tg_id == 415984908:
        session = create_session()
        f = open('9.txt', encoding="UTF8")
        for i in range(19):
            name = f.readline().rstrip()
            id = name[-2]
            if name[-3] == '(':
                id = int(id)
                name = name[0:len(name) - 3]
            else:
                id = int(id) + int(name[-3]) * 10
                name = name[0:len(name) - 4]
            nn = For_paid_game_info_9()
            nn.pose_id = id
            nn.name = name
            nn.discrip = f.readline()
            s = f.readline()
            session.add(nn)
            session.commit()
        session.close()
    else:
        await bot.delete_message(chat_id=tg_id, message_id=message.message_id)


@dp.message_handler(commands=['update_photo'])
async def process_start_command(message: types.Message, state: FSMContext):
    tg_id = int(message.chat.id)
    if tg_id == 415984908:
        x1 = time.time()
        session = create_session()
        poses = session.query(Poses).all()
        for elem in poses:
            a = await bot.send_photo(chat_id=tg_id, photo=base64.b64decode(elem.photo_base_64))
            elem.file_id = a.photo[0].file_id
            session.add(elem)
            session.commit()
            await asyncio.sleep(0.5)
        session.close()
        x2 = time.time()
        await bot.send_message(chat_id=tg_id, text=str(x2 - x1))
    else:
        await bot.delete_message(chat_id=tg_id, message_id=message.message_id)


@dp.message_handler(content_types=ContentType.CONTACT)
async def getting_password(msg: types.Message, state: FSMContext):
    session = create_session()
    tg_id = msg.chat.id
    user = session.query(User).filter(User.user_tg_id == tg_id).first()
    user.phone_number = is_phone_number(str(msg.contact.phone_number))
    user.state = "finish_reg"
    session.add(user)
    session.commit()
    await bot.send_message(tg_id,
                           "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ üèÅ\n–ú—ã –¥–∞—Ä–∏–º –≤–∞–º –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –µ–≥–æ –≤ —Å–≤–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏",
                           reply_markup=types.ReplyKeyboardRemove())
    add_poses(1, tg_id)
    add_poses(13, tg_id)
    add_poses(38, tg_id)
    add_poses(43, tg_id)
    add_poses(45, tg_id)
    kl = InlineKeyboardMarkup()
    if user.pol == 'man':
        kl.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë®", callback_data='my_profile'))
    else:
        kl.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë©", callback_data='my_profile'))
    kl.add(InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É üéÅ', callback_data='every_day'))
    kl.add(InlineKeyboardButton('–ò–≥—Ä—ã ‚ô•Ô∏è', callback_data='game'))
    kl.add(InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è', callback_data='poses'))
    kl.add(InlineKeyboardButton('–ü—Ä–æ–º–æ–∫–æ–¥—ã üíØ', callback_data='spromo'))
    kl.add(InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üõí', callback_data='store'))
    kl.add(InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ id –∑–∞–∫–∞–∑–∞ üÜî', callback_data='zak_id'))
    kl.add(InlineKeyboardButton('–û sex-coin üìñ', url='https://telegra.ph/O-sex-coins-09-07'))
    kl.add(InlineKeyboardButton('–ü–æ–º–æ—â—å üÜò', url='https://t.me/amateur_help'))
    await bot.send_message(chat_id=tg_id,
                           text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã\n\n–≠—Ç–æ –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∏–Ω—Ç–∏–º–Ω—ã—Ö —Å–≤—è–∑–µ–π\n–°–µ–π—á–∞—Å –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ {user.balance} sex-coins üí∏\n\n–°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â—ë –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å {min(200 - user.zar_today, 2400 - user.zar_mesyaz)} üíµ\n–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –µ—â—ë {2400 - user.zar_mesyaz} üí∞",
                           reply_markup=kl)


@dp.message_handler()
async def just_message(message: types.Message, state: FSMContext):
    session = create_session()
    tex = message.text
    tg_id = message.chat.id
    user = session.query(User).filter(User.user_tg_id == tg_id).first()
    if user is None:
        await bot.delete_message(chat_id=tg_id, message_id=message.message_id)
    elif user.state == 'write_pol':
        if tex == "–ú—É–∂—á–∏–Ω–∞ üë®":
            user.pol = 'man'
            user.state = "write_name"
            session.add(user)
            session.commit()
            await bot.send_message(tg_id, "–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è ‚úçÔ∏è", reply_markup=types.ReplyKeyboardRemove())
        elif tex == '–ñ–µ–Ω—â–∏–Ω–∞ üë©':
            user.pol = 'woman'
            user.state = "write_name"
            session.add(user)
            session.commit()
            await bot.send_message(tg_id, "–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è ‚úçÔ∏è", reply_markup=types.ReplyKeyboardRemove())
        else:
            await bot.send_message(tg_id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫', reply_markup=reg_kl)
    elif user.state == 'write_name':
        if user.phone_number == None:
            user.name = tex
            user.state = "write_phone"
            session.add(user)
            session.commit()
            await bot.send_message(chat_id=tg_id,
                                   text="–ü–æ—Å–ª–µ–¥–Ω–∏–π —ç—Ç–∞–ø –Ω–∞—à–µ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞. –£–∫–∞–∂–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. \n–ú—ã —Å–∞–º–∏ –æ—á–µ–Ω—å –Ω–µ –ª—é–±–∏–º —Å–ø–∞–º –∏ –¥—Ä—É–≥–∏–º –Ω–µ —à–ª–µ–º üôÖ‚Äç‚ôÇÔ∏è\n–¢–µ–ª–µ—Ñ–æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ª–æ–≥–∏–Ω–∞. –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç –æ—à–∏–±–∫–∞ —Å –±–æ—Ç–æ–º, —Ç–æ –Ω–∞–º –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –≤–∞—Å —Ç–∞–∫ –Ω–∞–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º–µ :)",
                                   reply_markup=markup_request)
        else:
            user.name = tex
            session.add(user)
            session.commit()
            await bot.send_message(chat_id=tg_id, text="–í—ã –ø–æ–º–µ–Ω—è–ª–∏ –∏–º—è", reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')))
    elif user.state == 'add_partner':
        f = is_phone_number(message.text)
        kl = InlineKeyboardMarkup()
        if not f:
            kl.add(InlineKeyboardButton("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑ ‚Ü©Ô∏è", callback_data='add_partner'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.send_message(tg_id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –Ω–µ –≤–µ—Ä–Ω—ã–π üò≠', reply_markup=kl)
        else:
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.send_message(tg_id, '–ü–∞—Ä—Ç–Ω—ë—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω ‚úÖ', reply_markup=kl)
            user.partner_phone_number = is_phone_number(f)
            partner = session.query(User).filter(User.phone_number == is_phone_number(f)).first()
            if partner is None:
                user.partner_name = '–ø–∞—Ä—Ç–Ω—ë—Ä'
            else:
                user.partner_name = partner.name
        user.state = ''
        session.add(user)
        session.commit()
    elif user.state == 'write_phone':
        user.state = 'finish_reg'
        user.phone_number = ""
        await bot.send_message(tg_id,
                               "–û—á–µ–Ω—å –∂–∞–ª—å üò•\n\n–£ –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—ã —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º, –Ω–æ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –≤–æ –≤–∫–ª–∞–¥–∫–µ –ø—Ä–æ—Ñ–∏–ª—å",
                               reply_markup=types.ReplyKeyboardRemove())
        await bot.send_message(tg_id,
                               "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ üèÅ\n–ú—ã –¥–∞—Ä–∏–º –≤–∞–º –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –µ–≥–æ –≤ —Å–≤–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏",
                               reply_markup=types.ReplyKeyboardRemove())
        add_poses(1, tg_id)
        add_poses(13, tg_id)
        add_poses(38, tg_id)
        add_poses(43, tg_id)
        add_poses(45, tg_id)
        kl = InlineKeyboardMarkup()
        if user.pol == 'man':
            kl.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë®", callback_data='my_profile'))
        else:
            kl.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë©", callback_data='my_profile'))
        kl.add(InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É üéÅ', callback_data='every_day'))
        kl.add(InlineKeyboardButton('–ò–≥—Ä—ã ‚ô•Ô∏è', callback_data='game'))
        kl.add(InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è', callback_data='poses'))
        kl.add(InlineKeyboardButton('–ü—Ä–æ–º–æ–∫–æ–¥—ã üíØ', callback_data='spromo'))
        kl.add(InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üõí', callback_data='store'))
        kl.add(InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ id –∑–∞–∫–∞–∑–∞ üÜî', callback_data='zak_id'))
        kl.add(InlineKeyboardButton('–û sex-coin üìñ', url='https://telegra.ph/O-sex-coins-09-07'))
        kl.add(InlineKeyboardButton('–ü–æ–º–æ—â—å üÜò', url='https://t.me/amateur_help'))
        await bot.send_message(chat_id=tg_id,
                               text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã\n\n–≠—Ç–æ –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∏–Ω—Ç–∏–º–Ω—ã—Ö —Å–≤—è–∑–µ–π\n–°–µ–π—á–∞—Å –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ {user.balance} sex-coins üí∏\n\n–°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â—ë –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å {min(200 - user.zar_today, 2400 - user.zar_mesyaz)} üíµ\n–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –µ—â—ë {2400 - user.zar_mesyaz} üí∞",
                               reply_markup=kl)
    elif user.state == 'write_id':
        ans = True
        for i in tex:
            if i not in "0123456789":
                ans = False
                break
        if ans:
            f = get_coins_from_order(tex, tg_id)
            await bot.send_message(tg_id, text=f, reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')))
        else:
            user.state = ''
            await bot.send_message(tg_id,
                                   text='–í ID –∑–∞–∫–∞–∑–∞ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã\n–ú–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑',
                                   reply_markup=InlineKeyboardMarkup().add(
                                       InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')))
        session.add(user)
        session.commit()
    elif user.state == 'write_wish':
        user.state = ''
        gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.play == 1).filter(
            For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.player1_id == tg_id).first()
        if gam is None:
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.play == 1).filter(
                For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.player2_id == tg_id).first()
            if gam is None:
                pass
            else:
                gam.wish2 = tex
                gam.play_now = gam.play_now + 1
                if gam.play_now == gam.players:
                    await bot.send_message(chat_id=tg_id, text='–ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä–∞—Ç—å...')
                    user.state = 'answer_vop'
                    part = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                    part.state = 'answer_vop'
                    progress = session.query(Progress).filter(Progress.user_tg_id == int(gam.player1_id)).filter(
                        Progress.gam_id == 1).first()
                    if progress is None:
                        new = Progress()
                        new.gam_id = 1
                        new.user_tg_id = int(gam.player1_id)
                        new.lvl = 1
                        session.add(new)
                        session.commit()
                        ch = 1
                    else:
                        ch = (progress.lvl) % 50 + 1
                        progress.lvl = progress.lvl + 1
                        session.add(progress)
                    vop = session.query(Paid_game_info_1).filter(Paid_game_info_1.id == ch).first()
                    kl = ReplyKeyboardMarkup(resize_keyboard=True)
                    kl.add(KeyboardButton('–û—Ç–≤–µ—Ç–∏–ª –≤ –∂–∏–≤—É—é üìµ'))
                    await bot.send_message(chat_id=user.user_tg_id,
                                           text=f'–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø—Ä—è–º–æ –≤ –±–æ—Ç–∞ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
                    await bot.send_message(chat_id=part.user_tg_id,
                                           text=f'–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø—Ä—è–º–æ –≤ –±–æ—Ç–∞ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
                    await bot.send_message(chat_id=user.user_tg_id, text=f'*–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ*\n\n{vop.caption}',
                                           reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                    await bot.send_message(chat_id=part.user_tg_id, text=f'*–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ*\n\n{vop.caption}',
                                           reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                    gam.play_now = 0
                    gam.game_id_id = ch
                    session.add(part)
                    session.add(user)
                    session.commit()
                else:
                    await bot.send_message(chat_id=tg_id, text='–ö—Ä—É—Ç–æ! –û—Å—Ç–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è –∂–µ–ª–∞–Ω–∏—è –æ—Ç —Ç–≤–æ–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ‚è≥')
                session.add(gam)
                session.commit()
        else:
            gam.wish1 = tex
            gam.play_now = gam.play_now + 1
            if gam.play_now == gam.players:
                await bot.send_message(chat_id=tg_id, text='–ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä–∞—Ç—å...')
                user.state = 'answer_vop'
                part = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                part.state = 'answer_vop'
                progress = session.query(Progress).filter(Progress.user_tg_id == int(gam.player1_id)).filter(
                    Progress.gam_id == 1).first()
                if progress is None:
                    new = Progress()
                    new.gam_id = 1
                    new.user_tg_id = int(gam.player1_id)
                    new.lvl = 1
                    session.add(new)
                    session.commit()
                    ch = 1
                else:
                    ch = (progress.lvl) % 50 + 1
                    progress.lvl = progress.lvl + 1
                    session.add(progress)
                vop = session.query(Paid_game_info_1).filter(Paid_game_info_1.id == ch).first()
                kl = ReplyKeyboardMarkup(resize_keyboard=True)
                kl.add(KeyboardButton('–û—Ç–≤–µ—Ç–∏–ª –≤ –∂–∏–≤—É—é üìµ'))
                await bot.send_message(chat_id=user.user_tg_id,
                                       text=f'–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø—Ä—è–º–æ –≤ –±–æ—Ç–∞ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
                await bot.send_message(chat_id=part.user_tg_id,
                                       text=f'–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø—Ä—è–º–æ –≤ –±–æ—Ç–∞ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
                await bot.send_message(chat_id=user.user_tg_id, text=f'*–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ*\n\n{vop.caption}',
                                       reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                await bot.send_message(chat_id=part.user_tg_id, text=f'*–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ*\n\n{vop.caption}',
                                       reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                gam.play_now = 0
                gam.game_id_id = ch
                session.add(part)
                session.add(user)
                session.commit()
            else:
                await bot.send_message(chat_id=tg_id, text='–ö—Ä—É—Ç–æ! –û—Å—Ç–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è –∂–µ–ª–∞–Ω–∏—è –æ—Ç —Ç–≤–æ–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ‚è≥')
            session.add(gam)
            session.commit()
        session.add(user)
        session.commit()
    elif user.state == 'answer_vop':
        user.state = ''
        gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.play == 1).filter(
            For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.player1_id == tg_id).first()
        if gam is None:
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.play == 1).filter(
                For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.player2_id == tg_id).first()
            if gam is None:
                pass
            else:
                gam.vop2 = tex
                gam.play_now = gam.play_now + 1
                if gam.play_now == gam.players:
                    part = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                    part.state = ''
                    cap = session.query(Paid_game_info_1).filter(Paid_game_info_1.id == gam.game_id_id).first()
                    kl = InlineKeyboardMarkup(row_width=2).add(
                        InlineKeyboardButton('–í–µ—Ä–Ω–æ ‚úÖ', callback_data=f'answ_{gam.id}_y'),
                        InlineKeyboardButton('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚ùå', callback_data=f'answ_{gam.id}_n'))
                    a = await bot.send_message(chat_id=gam.player1_id, text='–ó–∞–≥—Ä—É–∑–∫–∞...',
                                               reply_markup=ReplyKeyboardRemove())
                    b = await bot.send_message(chat_id=gam.player2_id, reply_markup=ReplyKeyboardRemove(),
                                               text='–ó–∞–≥—Ä—É–∑–∫–∞...')
                    await bot.delete_message(chat_id=gam.player1_id, message_id=a.message_id)
                    await bot.delete_message(chat_id=gam.player2_id, message_id=b.message_id)
                    await bot.send_message(chat_id=gam.player1_id,
                                           text=f"*–í–æ–ø—Ä–æ—Å:*\n\n{cap.caption}\n*–û—Ç–≤–µ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞:*\n\n{gam.vop2}",
                                           parse_mode=ParseMode.MARKDOWN, reply_markup=kl)

                    await bot.send_message(chat_id=gam.player2_id,
                                           text=f"*–í–æ–ø—Ä–æ—Å:*\n\n{cap.caption}\n*–û—Ç–≤–µ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞:*\n\n{gam.vop1}",
                                           parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                    gam.play_now = 0
                    session.add(part)
                    session.add(user)
                    session.commit()
                else:
                    await bot.send_message(chat_id=tg_id, text='–¢–µ–ø–µ—Ä—å –∂–¥—ë–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ—Ç —Ç–≤–æ–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞...',
                                           reply_markup=ReplyKeyboardRemove())
                session.add(gam)
                session.commit()
        else:
            gam.vop1 = tex
            gam.play_now = gam.play_now + 1
            if gam.play_now == gam.players:
                part = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                part.state = ''
                cap = session.query(Paid_game_info_1).filter(Paid_game_info_1.id == gam.game_id_id).first()
                kl = InlineKeyboardMarkup(row_width=2).add(
                    InlineKeyboardButton('–í–µ—Ä–Ω–æ ‚úÖ', callback_data=f'answ_{gam.id}_y'),
                    InlineKeyboardButton('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚ùå', callback_data=f'answ_{gam.id}_n'))
                a = await bot.send_message(chat_id=gam.player1_id, text='–ó–∞–≥—Ä—É–∑–∫–∞...',
                                           reply_markup=ReplyKeyboardRemove())
                b = await bot.send_message(chat_id=gam.player2_id, reply_markup=ReplyKeyboardRemove(),
                                           text='–ó–∞–≥—Ä—É–∑–∫–∞...')
                await bot.delete_message(chat_id=gam.player1_id, message_id=a.message_id)
                await bot.delete_message(chat_id=gam.player2_id, message_id=b.message_id)
                await bot.send_message(chat_id=gam.player1_id,
                                       text=f"*–í–æ–ø—Ä–æ—Å:*\n\n{cap.caption}\n*–û—Ç–≤–µ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞:*\n\n{gam.vop2}",
                                       parse_mode=ParseMode.MARKDOWN, reply_markup=kl)

                await bot.send_message(chat_id=gam.player2_id,
                                       text=f"*–í–æ–ø—Ä–æ—Å:*\n\n{cap.caption}\n*–û—Ç–≤–µ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞:*\n\n{gam.vop1}",
                                       parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                gam.play_now = 0
                session.add(part)
                session.add(user)
                session.commit()
            else:
                await bot.send_message(chat_id=tg_id, text='–¢–µ–ø–µ—Ä—å –∂–¥—ë–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ—Ç —Ç–≤–æ–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞...',
                                       reply_markup=ReplyKeyboardRemove())
            session.add(gam)
            session.commit()
        session.add(user)
        session.commit()
    elif user.state == 'privet1':
        user.state = 'privet2'
        await bot.send_message(chat_id=tg_id,
                               text='–Ø ‚Äì —Å–æ–±—Ä–∞–Ω–∏–µ –≥–æ—Ä—è—á–∏—Ö –ø–æ–∑ –∏ —ç—Ä–æ—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä—ã–º —Ç—ã –∏ —Ç–≤–æ–π –ø–∞—Ä—Ç–Ω–µ—Ä —Å–º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–µ –≥—Ä–∞–Ω–∏ –≤ —Å–µ–∫—Å–µ –∏ –ª—É—á—à–µ —É–∑–Ω–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∫–∞–∫ –≤ –ø–æ—Å—Ç–µ–ª–∏, —Ç–∞–∫ –∏ –≤ –∂–∏–∑–Ω–∏.'
                               , reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
                KeyboardButton("–ö—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª? ü§î")))
    elif user.state == 'privet2':
        user.state = 'privet3'
        await bot.send_message(chat_id=tg_id,
                               text='–ú–µ–Ω—è —Å–æ–∑–¥–∞–ª–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–ª–æ–¥—ã—Ö —Ä–µ–±—è—Ç ‚Äì —Å —Ü–µ–ª—å—é –ø–æ–º–æ—á—å –ª—é–¥—è–º –≤ –¥–µ–ª–µ, –æ –∫–æ—Ç–æ—Ä–æ–º, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, ¬´–Ω–µ –ø—Ä–∏–Ω—è—Ç–æ¬ª –≥–æ–≤–æ—Ä–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ.\n\n–í—Å–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤, —Å —Ä–∞–∑–Ω—ã–º –æ–ø—ã—Ç–æ–º –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏ –≤ —Å–µ–∫—Å–µ ‚Äì –∏–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –≤–æ –º–Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ.',
                               reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
                                   KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –æ–± –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–µ üé≤")))
    elif user.state == 'privet3':
        user.state = 'privet4'
        await bot.send_message(chat_id=tg_id,
                               text="–ï—Å–ª–∏ —Ç—ã –∏ —Ç–≤–æ–π –ø–∞—Ä—Ç–Ω–µ—Ä —É—Å—Ç–∞–ª–∏ –æ—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –ø–æ–∑, –≤—Ä–æ–¥–µ –Ω–∞–µ–∑–¥–Ω–∏—Ü—ã –∏–ª–∏ –¥–æ–≥–≥–∏-—Å—Ç–∞–π–ª, —Ç–æ —è –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è.\n\n–ù–æ –ø–æ–º–∏–º–æ –ø–æ–∑, —É –º–µ–Ω—è –µ—Å—Ç—å –∏ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —Ä–∞–∑–Ω—É—é —Ç–µ–º–∞—Ç–∏–∫—É. –•–æ—Ç–∏—Ç–µ —á–µ–≥–æ-—Ç–æ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–≥–æ? –¢–æ–≥–¥–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—É –Ω–µ–∂–Ω—ã–π –º–∞—Å—Å–∞–∂ –ø–ª–µ—á. –•–æ—á–µ—Ç—Å—è –ø–æ–∂–µ—Å—Ç—á–µ? –í–∞–º –≤ –ë–î–°–ú-—Å–µ–∫—Ü–∏—é. –ó–∞–¥–∞–Ω–∏–π –ø—Ä–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.",
                               reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
                                   KeyboardButton("–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä üîç")))
    elif user.state == 'privet4':
        user.state = 'privet5'
        poz = session.query(Poses).filter(Poses.pos_id == 2).first()
        f = int(poz.pos_lvl) * '‚≠êÔ∏è'
        await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                             caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}',
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
                                 KeyboardButton("–ó–≤—É—á–∏—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ")),
                             parse_mode=ParseMode.MARKDOWN)
    elif user.state == 'privet5':
        user.state = 'privet6'
        await bot.send_message(chat_id=tg_id,
                               text="–ß—É–¥–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π —è —Ç–µ–±–µ –æ–±—ä—è—Å–Ω—é –∫–∞–∫ —Ç—É—Ç –≤—Å–µ —É—Å—Ç—Ä–æ–µ–Ω–æ.\n\n–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Ç—ã –æ–±–æ –º–µ–Ω—è —É–∑–Ω–∞–ª —á–µ—Ä–µ–∑ qr-–∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –≤–º–µ—Å—Ç–µ —Å —Ç–≤–æ–µ–π –Ω–æ–≤–æ–π –∏–≥—Ä—É—à–∫–æ–π. –ö—Å—Ç–∞—Ç–∏, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, —Ç–æ –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –∏ –Ω–∞–ø–∏—à–∏ —Ä–µ–±—è—Ç–∞–º –≤ –º–∞–≥–∞–∑–∏–Ω. –¢–µ–±–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–º–æ–≥—É—Ç.\n\n–°–º–æ—Ç—Ä–∏, –µ—Å–ª–∏ —Ç—ã –∫—É–ø–∏–ª –∏–≥—Ä—É—à–∫—É, —Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞. –ù–∞–ø–∏—à–∏ –µ–≥–æ –º–Ω–µ –∏ —è –∑–∞—á–∏—Å–ª—é –Ω–∞ —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å –∫–æ–∏–Ω—ã –≤ —Ä–∞–∑–º–µ—Ä–µ 10% –æ—Ç —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞.\n\n–£ —Ç–µ–±—è –µ—Å—Ç—å –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞?",
                               reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("–î–∞"),
                                                                                          KeyboardButton("–ù–µ—Ç")))
    elif user.state == 'privet6':
        if tex == '–î–∞':
            user.state = 'write_id_'
            await bot.send_message(chat_id=tg_id, text="–¢–æ–≥–¥–∞ –≤–ø–∏—à–∏ –µ–≥–æ —Å—é–¥–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–º!",
                                   reply_markup=ReplyKeyboardRemove())
        else:
            user.state = 'privet7'
            await bot.send_message(chat_id=tg_id,
                                   text="–í–∞—É. –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å –∫–∞–∫ —Ç—ã –æ–±–æ –º–Ω–µ —É–∑–Ω–∞–ª :)\n–ù—É, –ª–∞–¥–Ω–æ. –ö–∞–∫-–Ω–∏–±—É–¥—å –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ–± —ç—Ç–æ–º, –∞ –ø–æ–∫–∞ –º–æ–≥—É —Ç–µ–±–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É –≤ –º–∞–≥–∞–∑–∏–Ω–µ, —á—Ç–æ–±—ã —Ç—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª –¥–ª—è —Å–µ–±—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–µ–Ω—å–∫–æ–µ.\n```OCBCE-HELLO100```",
                                   reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add('–ü–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üîú'),
                                   parse_mode=ParseMode.MARKDOWN)
            await bot.send_message(chat_id=tg_id, text="–õ–æ–≤–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞–≥–∞–∑–∏–Ω\n\nhttps://kazanexpress.ru/amateur")
    elif user.state == 'write_id_':
        ans = True
        user.state = "privet7"
        for i in tex:
            if i not in "0123456789":
                ans = False
                break
        if ans:
            f = get_coins_from_order(tex, tg_id)
            await bot.send_message(tg_id,
                                   text=f"{f}\n\n–ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, —Ç–æ –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ id –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–∏—è –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É @Amateur_help",
                                   reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
                                       KeyboardButton("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑ üîÑ"),
                                       KeyboardButton("–ü–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üîú")))
        else:
            await bot.send_message(tg_id,
                                   text='–í ID –∑–∞–∫–∞–∑–∞ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã\n\nM–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ id –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–∏—è',
                                   reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
                                       KeyboardButton("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑ üîÑ"),
                                       KeyboardButton("–ü–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üîú")))
        session.add(user)
        session.commit()
    elif user.state == 'privet7':
        if tex != '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑ üîÑ':
            user.state = "privet8"
            await bot.send_message(chat_id=tg_id,
                                   text="–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –¥–ª—è —Ç–µ–±—è —Å—Ç–∞—Ç—å—é, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º. –ß–∏—Ç–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ –∏ –ø—Ä–æ—Å—Ç–æ. –ù–∞–º–µ–∫–Ω–∏, –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–µ—à—å :)",
                                   reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add("–ì–æ—Ç–æ–≤–æ!"))
            await bot.send_message(chat_id=tg_id, text='https://telegra.ph/AmateurBot-09-03')
        else:
            user.state = 'write_id_'
            await bot.send_message(chat_id=tg_id, text="–í–ø–∏—à–∏—Ç–µ id –∑–∞–∫–∞–∑–∞",
                                   reply_markup=ReplyKeyboardRemove())
    elif user.state == 'privet8':
        await bot.send_message(chat_id=tg_id, text="–¢–æ–≥–¥–∞ —Å—Ç–∞—Ä—Ç—É–µ–º! –£–≤–µ—Ä–µ–Ω, —á—Ç–æ –±—É–¥–µ—Ç –∂–∞—Ä–∫–æ")
        user.state = 'write_pol'
        await bot.send_message(tg_id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AmateurBot üëã\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª üöª',
                               reply_markup=reg_kl)
    else:
        if user.user_tg_id != 415984908:
            await bot.delete_message(chat_id=tg_id, message_id=message.message_id)
        else:
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton('–ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏', callback_data='ras_yes'))
            await bot.send_message(chat_id=415984908, text=tex,
                                   reply_markup=kl)
    session.commit()
    session.close()


@dp.callback_query_handler()
async def process_withdraw_request(callback_query: types.CallbackQuery):
    session = create_session()
    tg_id = callback_query.message.chat.id
    user = session.query(User).filter(User.user_tg_id == tg_id).first()
    if user is None:
        await bot.send_message(chat_id=tg_id,
                               text='–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äì AmateurBot, –ø–µ—Ä–≤—ã–π —Å–µ–∫—Å-–±–æ—Ç –≤ —Ä—É–Ω–µ—Ç–µ, –∏ –º–Ω–µ –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ, —á—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –ø–æ–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π!',
                               reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
                                   KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ:")))
        new_user = User()
        new_user.user_tg_id = tg_id
        new_user.state = 'privet1'
        new_user.balance = 500
        new_user.pol = "None"
        new_user.podpiska = "False"
        new_user.zar_today = 0
        new_user.zar_mesyaz = 0
        new_user.count_day_every_day = 0
        session.add(new_user)
        session.commit()
    else:
        if callback_query.data == 'home':
            user.state = ''
            texx = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã\n\n–≠—Ç–æ –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∏–Ω—Ç–∏–º–Ω—ã—Ö —Å–≤—è–∑–µ–π\n–°–µ–π—á–∞—Å –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ {user.balance} sex-coins üí∏\n\n–°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â—ë –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å {min(200 - user.zar_today, 2400 - user.zar_mesyaz)} üíµ\n–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –µ—â—ë {2400 - user.zar_mesyaz} üí∞"
            # kl = InlineKeyboardMarkup()
            if user.pol == 'man':
                main_kl_man = InlineKeyboardMarkup()
                main_kl_man.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë®", callback_data='my_profile'))
                main_kl_man.add(InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É üéÅ', callback_data='every_day'))
                main_kl_man.add(InlineKeyboardButton('–ò–≥—Ä—ã ‚ô•Ô∏è', callback_data='game'))
                main_kl_man.add(InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è', callback_data='poses'))
                main_kl_man.add(InlineKeyboardButton('–ü—Ä–æ–º–æ–∫–æ–¥—ã üíØ', callback_data='spromo'))
                main_kl_man.add(InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üõí', callback_data='store'))
                main_kl_man.add(InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ id –∑–∞–∫–∞–∑–∞ üÜî', callback_data='zak_id'))
                main_kl_man.add(InlineKeyboardButton('–û sex-coin üìñ', url='https://telegra.ph/O-sex-coins-09-07'))
                main_kl_man.add(InlineKeyboardButton('–ü–æ–º–æ—â—å üÜò', url='https://t.me/amateur_help'))
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text=texx,
                                            reply_markup=main_kl_man)
            else:
                main_kl_woman = InlineKeyboardMarkup()
                main_kl_woman.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë©", callback_data='my_profile'))
                main_kl_woman.add(InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É üéÅ', callback_data='every_day'))
                main_kl_woman.add(InlineKeyboardButton('–ò–≥—Ä—ã ‚ô•Ô∏è', callback_data='game'))
                main_kl_woman.add(InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è', callback_data='poses'))
                main_kl_woman.add(InlineKeyboardButton('–ü—Ä–æ–º–æ–∫–æ–¥—ã üíØ', callback_data='spromo'))
                main_kl_woman.add(InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üõí', callback_data='store'))
                main_kl_woman.add(InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ id –∑–∞–∫–∞–∑–∞ üÜî', callback_data='zak_id'))
                main_kl_woman.add(InlineKeyboardButton('–û sex-coin üìñ', url='https://telegra.ph/O-sex-coins-09-07'))
                main_kl_woman.add(InlineKeyboardButton('–ü–æ–º–æ—â—å üÜò', url='https://t.me/amateur_help'))
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text=texx,
                                            reply_markup=main_kl_woman)
        elif callback_query.data == 'home_':
            a = await bot.send_message(chat_id=tg_id, reply_markup=types.ReplyKeyboardRemove(),
                                       text='–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
            user.state = ''
            kl = InlineKeyboardMarkup()
            if user.pol == 'man':
                kl.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë®", callback_data='my_profile'))
            else:
                kl.add(InlineKeyboardButton("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë©", callback_data='my_profile'))
            kl.add(InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É üéÅ', callback_data='every_day'))
            kl.add(InlineKeyboardButton('–ò–≥—Ä—ã ‚ô•Ô∏è', callback_data='game'))
            kl.add(InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è', callback_data='poses'))
            kl.add(InlineKeyboardButton('–ü—Ä–æ–º–æ–∫–æ–¥—ã üíØ', callback_data='spromo'))
            kl.add(InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üõí', callback_data='store'))
            kl.add(InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ id –∑–∞–∫–∞–∑–∞ üÜî', callback_data='zak_id'))
            kl.add(InlineKeyboardButton('–û sex-coin üìñ', url='https://telegra.ph/O-sex-coins-09-07'))
            kl.add(InlineKeyboardButton('–ü–æ–º–æ—â—å üÜò', url='https://t.me/amateur_help'))
            await bot.send_message(chat_id=tg_id,
                                   text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã\n\n–≠—Ç–æ –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∏–Ω—Ç–∏–º–Ω—ã—Ö —Å–≤—è–∑–µ–π\n–°–µ–π—á–∞—Å –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ {user.balance} sex-coins üí∏\n\n–°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â—ë –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å {min(200 - user.zar_today, 2400 - user.zar_mesyaz)} üíµ\n–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –µ—â—ë {2400 - user.zar_mesyaz} üí∞",
                                   reply_markup=kl)
            await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
            await asyncio.sleep(0.8)
            await bot.delete_message(chat_id=tg_id, message_id=a.message_id)
        elif callback_query.data == 'every_day':
            ans = take_reward(tg_id)
            mas = ["*1-—ã–π –¥–µ–Ω—å:* 5 –∫–æ–∏–Ω–æ–≤",
                   "*2-–æ–π –¥–µ–Ω—å:* 10 –∫–æ–∏–Ω–æ–≤",
                   "*3-–∏–π –¥–µ–Ω—å:* —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∞ (–µ—Å–ª–∏ –ø–æ–∑—ã –æ—Ç–∫—Ä—ã—Ç—ã, —Ç–æ 20 –∫–æ–∏–Ω–æ–≤)",
                   "*4-—ã–π –¥–µ–Ω—å:* 40 –∫–æ–∏–Ω–æ–≤",
                   "*5-—ã–π –¥–µ–Ω—å:* –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ 100 —Ä—É–±–ª–µ–π",
                   "*6-–æ–π –¥–µ–Ω—å:* –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ 100 —Ä—É–±–ª–µ–π + 25 –∫–æ–∏–Ω–æ–≤",
                   "*7-–æ–π –¥–µ–Ω—å:* –ö–æ–ª–æ–¥—É —Å –ø–æ–∑–∞–º–∏"]
            mas[(max(user.count_day_every_day - 1, 0)) % 7] += ' `–í—ã –∑–¥–µ—Å—å` üëà'
            texx = "*–ó–∞—Ö–æ–¥–∏—Ç–µ –≤ –±–æ—Ç–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–æ–¥–∞—Ä–∫–∏*\n\n"
            for i in range(6):
                texx += mas[i] + '\n\n'
            texx += mas[-1]
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id, text=texx,
                                        parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            if ans != '–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–∑ –∑–∞ —Å–µ–≥–æ–¥–Ω—è üòî':
                a = await bot.send_message(chat_id=tg_id, text=ans)
                await asyncio.sleep(1.2)
                await bot.delete_message(chat_id=tg_id, message_id=a.message_id)
        elif callback_query.data == 'my_collection':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton("–ú–æ–∏ –∏–≥—Ä—ã üïπ", callback_data='smy_game'))

            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üî≠',
                                        reply_markup=kl)
        elif callback_query.data == 'my_pose':
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton(
                f'1-—ã–π —É—Ä–æ–≤–µ–Ω—å ({len(session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(Open_poses.pos_level == 1).all())} —à—Ç—É–∫)',
                callback_data='open_pose_1'))
            kl.add(InlineKeyboardButton(
                f'2-–æ–π —É—Ä–æ–≤–µ–Ω—å ({len(session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(Open_poses.pos_level == 2).all())} —à—Ç—É–∫)',
                callback_data='open_pose_2'))
            kl.add(InlineKeyboardButton(
                f'3-–∏–π —É—Ä–æ–≤–µ–Ω—å ({len(session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(Open_poses.pos_level == 3).all())} —à—Ç—É–∫)',
                callback_data='open_pose_3'))
            kl.add((InlineKeyboardButton(
                f'–í—Å–µ —É—Ä–æ–≤–Ω–∏ ({len(session.query(Open_poses).filter(Open_poses.user_id == tg_id).all())} —à—Ç—É–∫)',
                callback_data='open_pose_4')))
            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='poses'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –ø–æ–∑ üí™',
                                        reply_markup=kl)
        elif callback_query.data[0:len('open_pose_')] == 'open_pose_':
            pos_lvl = int(callback_query.data.split('_')[2])

            poz_all = -1
            if pos_lvl != 4:
                pos_all = session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(
                    Open_poses.pos_level == pos_lvl).all()
            else:
                pos_all = session.query(Open_poses).filter(Open_poses.user_id == tg_id).all()
            kl = InlineKeyboardMarkup(row_width=2)
            count = 1
            for elem in pos_all:
                if len(pos_all) == 100:
                    if count <= 2:
                        pass
                    else:
                        if elem.see == "True":
                            kl.add(
                                InlineKeyboardButton(f"{elem.name} üü¢",
                                                     callback_data=f'pose_{pos_lvl}_{elem.pos_id}_{count}_1'))
                        else:
                            kl.add(
                                InlineKeyboardButton(f"{elem.name} üîò",
                                                     callback_data=f'pose_{pos_lvl}_{elem.pos_id}_{count}_1'))
                else:
                    if elem.see == "True":
                        kl.add(
                            InlineKeyboardButton(f"{elem.name} üü¢",
                                                 callback_data=f'pose_{pos_lvl}_{elem.pos_id}_{count}_1'))
                    else:
                        kl.add(
                            InlineKeyboardButton(f"{elem.name} üîò",
                                                 callback_data=f'pose_{pos_lvl}_{elem.pos_id}_{count}_1'))
                count += 1

            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='my_pose'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            if len(callback_query.data.split('_')) == 4:
                await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                await bot.send_message(chat_id=tg_id,
                                       text='–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∑\nüîò - –≤—ã –µ—â—ë –Ω–µ –≤–∏–¥–µ–ª–∏\nüü¢ - —É–∂–µ –∫–∞–∫ —Ç–æ —Å–º–æ—Ç—Ä–µ–ª–∏',
                                       reply_markup=kl)
            else:
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text='–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∑\nüîò - –≤—ã –µ—â—ë –Ω–µ –≤–∏–¥–µ–ª–∏\nüü¢ - —É–∂–µ –∫–∞–∫ —Ç–æ —Å–º–æ—Ç—Ä–µ–ª–∏',
                                            reply_markup=kl)
        elif callback_query.data[0:len('pose_')] == 'pose_':
            pos_lvl = int(callback_query.data.split('_')[1])
            pos_id = int(callback_query.data.split('_')[2])
            ch = int(callback_query.data.split('_')[3])
            d = int(callback_query.data.split('_')[4])
            if pos_id == -1:
                await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                text=f"–í—ã —É–∂–µ –¥–æ–ª–∏—Å—Ç–∞–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ üòî",
                                                show_alert=True)
            else:
                await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                poz = session.query(Poses).filter(Poses.pos_id == pos_id).first()
                kl = InlineKeyboardMarkup(row_width=2)
                naz = -1
                if ch == 1:
                    naz = InlineKeyboardButton("–ü—Ä–µ–¥—ã–¥—É—â–∞—è ‚¨ÖÔ∏è", callback_data=f'pose_-1_-1_-1_-1')
                poz_all = -1
                if pos_lvl != 4:
                    pos_all = session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(
                        Open_poses.pos_level == pos_lvl).all()
                else:
                    pos_all = session.query(Open_poses).filter(Open_poses.user_id == tg_id).all()
                vp = -1
                if ch == len(pos_all):
                    vp = InlineKeyboardButton("–°–ª–µ–¥—É—â–∞—è ‚û°Ô∏è", callback_data=f'pose_-1_-1_-1_-1')
                count = 1
                if naz == -1 or vp == -1:
                    for elem in pos_all:
                        if ch - 1 == count:
                            naz = InlineKeyboardButton("–ü—Ä–µ–¥—ã–¥—É—â–∞—è ‚¨ÖÔ∏è",
                                                       callback_data=f'pose_{pos_lvl}_{elem.pos_id}_{count}_{0}')
                        if ch + 1 == count:
                            vp = InlineKeyboardButton("–°–ª–µ–¥—É—â–∞—è ‚û°Ô∏è",
                                                      callback_data=f'pose_{pos_lvl}_{elem.pos_id}_{count}_{0}')
                        count += 1
                kl.add(naz, vp)
                kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'open_pose_{pos_lvl}_1'),
                       InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                f = '‚≠êÔ∏è' * int(poz.pos_lvl)
                cur = session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(
                    Open_poses.pos_level == poz.pos_lvl).filter(Open_poses.pos_id == poz.pos_id).first()
                cur.see = "True"
                session.add(cur)
                session.commit()
                await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                     caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}', reply_markup=kl,
                                     parse_mode=ParseMode.MARKDOWN)
        elif callback_query.data == 'game':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton('–ü–ª–∞—Ç–Ω—ã–µ –∏–≥—Ä—ã üîí', callback_data='paid_game'))
            kl.add(InlineKeyboardButton('–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏–≥—Ä—ã üÜì', callback_data='free_game'))
            kl.add(InlineKeyboardButton('–ö—É–ø–ª–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã üîê', callback_data='my_game'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã üéØ', reply_markup=kl)
        elif callback_query.data == 'paid_game':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton('–ß—É—Å—Ç–≤–∞', callback_data='wpaid_game_1_a'))
            kl.add(InlineKeyboardButton('–°—Ç—Ä–∞—Å—Ç—å', callback_data='wpaid_game_2_a'))
            kl.add(InlineKeyboardButton('–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data='wpaid_game_4_a'))
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='game'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–Ω—Ä–∞–≤–∏–≤—à—É—é—Å—è –∏–≥—Ä—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ üëÄ', reply_markup=kl)
        elif callback_query.data[0:len('wpaid_game_')] == 'wpaid_game_':
            t = int(callback_query.data.split('_')[2])
            b = callback_query.data.split('_')[3]
            kl = InlineKeyboardMarkup()
            c = 0
            if t == 1:

                if b != 'b' or session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).filter(
                        Purchased_game.game_id == 5).first() != None:
                    c += 1
                    kl.add(
                        InlineKeyboardButton('–†–æ–º–∞–Ω—Ç–∏–∫–∞ —É—Ç—Ä–æ–º, –∞ —Å—Ç—Ä–∞—Å—Ç—å –≤–µ—á–µ—Ä–æ–º', callback_data=f'paid_game_5_1_{b}'))
                if b != 'b' or session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).filter(
                        Purchased_game.game_id == 6).first() != None:
                    c += 1
                    kl.add(InlineKeyboardButton('–Ø –∂–¥—É —Ç–µ–±—è –≤–µ—á–µ—Ä–æ–º', callback_data=f'paid_game_6_1_{b}'))
            elif t == 2:
                if b != 'b' or session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).filter(
                        Purchased_game.game_id == 3).first() != None:
                    c += 1
                    kl.add(InlineKeyboardButton('–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —ç—Ç–æ', callback_data=f'paid_game_3_2_{b}'))
                if b != 'b' or session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).filter(
                        Purchased_game.game_id == 4).first() != None:
                    c += 1
                    kl.add(InlineKeyboardButton('–ß–µ—Å—Ç–Ω–æ—Å—Ç—å –∏ —Å—Ç—Ä–∞—Å—Ç—å', callback_data=f'paid_game_4_2_{b}'))

                if b != 'b' or session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).filter(
                        Purchased_game.game_id == 8).first() != None:
                    c += 1
                    kl.add(InlineKeyboardButton('–ö—Ç–æ –ø–µ—Ä–≤—ã–π', callback_data=f'paid_game_8_2_{b}'))
                if b != 'b' or session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).filter(
                        Purchased_game.game_id == 9).first() != None:
                    c += 1
                    kl.add(InlineKeyboardButton('–ê —Ç–µ–ø–µ—Ä—å –ª–æ–∂–∏—Å—å –≤–æ—Ç —Ç–∞–∫‚Ä¶ ', callback_data=f'paid_game_9_2_{b}'))
                if b != 'b' or session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).filter(
                        Purchased_game.game_id == 10).first() != None:
                    c += 1
                    kl.add(InlineKeyboardButton('–ì–æ—Å–ø–æ–¥–∏–Ω –∏ –≥–æ—Å–ø–æ–∂–∞', callback_data=f'paid_game_10_2_{b}'))
                if b != 'b' or session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).filter(
                        Purchased_game.game_id == 11).first() != None:
                    c += 1
                    kl.add(InlineKeyboardButton('–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã', callback_data=f'paid_game_11_2_{b}'))
            elif t == 3:
                pass
            else:
                if b == 'b':
                    game_list = session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).all()
                else:
                    game_list = session.query(Paid_game).all()
                for elem in game_list:
                    elem = session.query(Paid_game).filter(Paid_game.game_id == elem.game_id).first()
                    if elem.game_id not in [1, 2, 7]:
                        kl.add(InlineKeyboardButton(elem.game_name, callback_data=f'paid_game_{elem.game_id}_4_{b}'))
                        c += 1
            if c != 0:
                if b != 'b':
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='paid_game'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                else:
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='my_game'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–Ω—Ä–∞–≤–∏–≤—à—É—é—Å—è –∏–≥—Ä—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ üëÄ',
                                            reply_markup=kl)
            else:
                await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                text=f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç—É –∏–≥—Ä –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üòî",
                                                show_alert=True)
        elif callback_query.data == '_paid_game':
            kl = InlineKeyboardMarkup()
            game_list = session.query(Paid_game).all()
            for elem in game_list:
                kl.add(InlineKeyboardButton(elem.game_name, callback_data=f'paid_game_{elem.game_id}_0_s'))
            # kl.add()
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='store'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–Ω—Ä–∞–≤–∏–≤—à—É—é—Å—è –∏–≥—Ä—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ üëÄ', reply_markup=kl)
        elif callback_query.data[0:len('paid_game_')] == 'paid_game_':
            paid_game_id = int(callback_query.data.split('_')[2])
            paid_game = session.query(Paid_game).filter(Paid_game.game_id == paid_game_id).first()
            buy = False

            if session.query(Purchased_game).filter(Purchased_game.game_id == paid_game_id).filter(
                    Purchased_game.user_id == tg_id).first() != None:
                buy = True
            kl = InlineKeyboardMarkup(row_width=2)
            b = callback_query.data.split('_')[4]
            t = callback_query.data.split('_')[3]
            if buy:
                kl.add(InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ üßê', url=str(paid_game.detail)),
                       InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å üöÄ', callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}'))
            else:
                kl.add(InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ üßê', url=str(paid_game.detail)),
                       InlineKeyboardButton('–ö—É–ø–∏—Ç—å (100 sex-coin)',
                                            callback_data=f'buy_paid_game_{paid_game_id}_{t}_{b}'))
            if len(callback_query.data.split('_')) == 5:
                t = callback_query.data.split('_')[3]
                if callback_query.data.split('_')[4] == 'b':
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô',
                                                callback_data=f'wpaid_game_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                elif callback_query.data.split('_')[4] == 'w':
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô',
                                                callback_data='_paid_game'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                else:
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô',
                                                callback_data=f'wpaid_game_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            else:
                kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='paid_game'),
                       InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text=f'*{beatufull_str(paid_game.game_name)}*\n\n{paid_game.game_caption}',
                                        parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
        elif callback_query.data[0:len('spaid_game_')] == 'spaid_game_':
            paid_game_id = callback_query.data.split('_')[2]
            paid_game_id = int(paid_game_id)
            paid_game = session.query(Paid_game).filter(Paid_game.game_id == paid_game_id).first()
            buy = False
            if session.query(Purchased_game).filter(Purchased_game.game_id == paid_game_id).filter(
                    Purchased_game.user_id == tg_id).first() != None:
                buy = True
            kl = InlineKeyboardMarkup(row_width=2)
            b = callback_query.data.split('_')[4]
            t = callback_query.data.split('_')[3]
            if buy:
                kl.add(InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ üßê', url=str(paid_game.detail)),
                       InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å üöÄ', callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}'))
            else:
                kl.add(InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ üßê', url=str(paid_game.detail)),
                       InlineKeyboardButton('–ö—É–ø–∏—Ç—å (100 sex-coin)',
                                            callback_data=f'buy_paid_game_{paid_game_id}_{t}_{b}'))
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='my_game'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text=f'*{beatufull_str(paid_game.game_name)}*\n\n{paid_game.game_caption}',
                                        parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
        elif callback_query.data[0:len('buy_paid_game_')] == 'buy_paid_game_':
            if user.balance >= 100:
                paid_game_id = int(callback_query.data.split('_')[3])
                new_paid_game = Purchased_game()
                new_paid_game.game_id = paid_game_id
                new_paid_game.user_id = int(user.user_tg_id)
                # new_paid_game.id = 456
                user.balance = user.balance - 100
                session.add(new_paid_game)
                session.add(user)
                session.commit()
                paid_game = session.query(Paid_game).filter(Paid_game.game_id == paid_game_id).first()
                await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                text=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ü•≥\n–ò–≥—Ä–∞ {beatufull_str(paid_game.game_name)} —Ç–µ–ø–µ—Ä—å –≤–∞—à–∞ üòç",
                                                show_alert=True)
                buy = True
                b = callback_query.data.split('_')[5]
                t = callback_query.data.split('_')[4]
                kl = InlineKeyboardMarkup(row_width=2)
                if buy:
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'wpaid_game_{t}_{b}'),
                           InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å üöÄ', callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}'))
                else:
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='paid_game'),
                           InlineKeyboardButton('–ö—É–ø–∏—Ç—å (100 sex-coin)', callback_data=f'buy_paid_game_{paid_game_id}'))
                if paid_game_id == 6:
                    for i in range(20):
                        ne = For_paid_game_info_6()
                        ne.name = session.query(Paid_game_info_6).filter(Paid_game_info_6.id == i + 1).first().dop_info
                        ne.user_tg_id = tg_id
                        ne.id_from_game = 6
                        ne.do = "No"
                        ne.id_from_game = 6
                        session.add(ne)
                        session.commit()
                kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text=f'*{beatufull_str(paid_game.game_name)}*\n\n{paid_game.game_caption}',
                                            parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            else:
                await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ sex-coin üò´',
                                                show_alert=True)
        elif callback_query.data[0:len('break_2_')] == 'break_2_':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton('–ö –∏–≥—Ä–∞–º üéÆ', callback_data='game'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            gam = session.query(For_paid_game_info_2).filter(
                For_paid_game_info_2.id == int(callback_query.data.split('_')[2])).first()
            await bot.delete_message(message_id=callback_query.message.message_id, chat_id=tg_id)
            await bot.send_message(chat_id=gam.player1_id,
                                   text='–ò–≥—Ä–∞ *–ì–æ–≤–æ—Ä–∏ –∏–ª–∏ –ø–æ–¥—á–∏–Ω—è–π—Å—è* –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –æ—á–∫–∏ –∑–∞ –∏–≥—Ä—É –±—ã–ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å\n\n–ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ –±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                                   parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            await bot.send_message(chat_id=gam.player2_id,
                                   text='–ò–≥—Ä–∞ *–ì–æ–≤–æ—Ä–∏ –∏–ª–∏ –ø–æ–¥—á–∏–Ω—è–π—Å—è* –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –æ—á–∫–∏ –∑–∞ –∏–≥—Ä—É –±—ã–ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å\n\n–ù–∞–∂–º–∏—Ç–µ /start —á—Ç–æ –±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                                   parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            await up_balance(gam.player1_id, gam.player1_count)
            await up_balance(gam.player2_id, gam.player2_count)
            gam.play = 0
            session.add(gam)
            session.commit()
        elif callback_query.data[0:len('play_paid_game_')] == 'play_paid_game_':
            paid_game_id = int(callback_query.data.split('_')[3])
            if paid_game_id == 1:
                if len(callback_query.data.split('_')) == 6:
                    # 1 –∏–≥—Ä–∞–µ—Ç 1, 2 –∏–≥—Ä–∞—é—Ç –≤–¥–≤–æ—ë–º
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(InlineKeyboardButton('–° –æ–¥–Ω–æ–≥–æ 1Ô∏è‚É£', callback_data=f'play_paid_game_{paid_game_id}_1'),
                           InlineKeyboardButton('–° –¥–≤—É—Ö 2Ô∏è‚É£', callback_data=f'play_paid_game_{paid_game_id}_2'))
                    b = callback_query.data.split('_')[5]
                    t = callback_query.data.split('_')[4]
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_{paid_game_id + 100}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(
                        chat_id=tg_id, message_id=callback_query.message.message_id,
                        text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å, —Å –æ–¥–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º —Å –¥–≤—É—Ö üì≤",
                        reply_markup=kl)
                else:
                    count_play = int(callback_query.data.split('_')[4])
                    if count_play == 2:
                        partner_phone_number = user.partner_phone_number
                        partner = session.query(User).filter(User.partner_phone_number == user.phone_number).filter(
                            User.phone_number == partner_phone_number).first()
                        if partner is None:
                            await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                            text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –º—ã –≤–∞–º –ø–æ–º–æ–∂–µ–º",
                                                            show_alert=True)
                        else:
                            user.state = 'write_wish'
                            partner.state = 'write_wish'
                            al = session.query(For_paid_game_info_1).all()
                            for elem in al:
                                if elem.player1_id == tg_id or elem.player2_id == tg_id:
                                    elem.play = 0
                                    session.add(elem)
                                    session.commit()
                            new = For_paid_game_info_1()
                            new.game_id = 1
                            new.players = 2
                            new.player1_id = user.user_tg_id
                            new.player2_id = partner.user_tg_id
                            new.player1_count = 0
                            new.player2_count = 0
                            new.play_now = 0
                            new.play = 1
                            session.add(new)
                            session.add(partner)
                            session.add(user)
                            session.commit()
                            await bot.send_message(chat_id=partner.user_tg_id,
                                                   text="–í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –ø–æ–∑–≤–∞–ª –≤–∞—Å –∏–≥—Ä–∞—Ç—å –≤ *–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ*\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ, –≤ —Å–ª—É—á–∞–µ –≤–∞—à–µ–π –ø–æ–±–µ–¥—ã, –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä—É",
                                                   parse_mode=ParseMode.MARKDOWN)
                            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                        text="–ò–≥—Ä–∞: *–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ* –Ω–∞—á–∞–ª–∞—Å—å\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ —Å–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ, –≤ —Å–ª—É—á–∞–µ –≤–∞—à–µ–π –ø–æ–±–µ–¥—ã, –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –µ–≥–æ —Ç–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É",
                                                        parse_mode=ParseMode.MARKDOWN)
                    elif count_play == 1:
                        await bot.edit_message_text(message_id=callback_query.message.message_id, chat_id=tg_id,
                                                    text="–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è –Ω–∞ –ª–∏—Å—Ç–æ—á–∫–µ, –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã –ø—Ä–æ–∏–≥—Ä–∞–≤—à–µ–º—É –¥–æ—Å—Ç–∞–Ω–µ—Ç—Å—è –∂–µ–ª–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ üìù")
                        al = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.play == 1).all()
                        for elem in al:
                            if elem.player1_id == tg_id or elem.player2_id == tg_id:
                                elem.play = 0
                                session.add(elem)
                                session.commit()
                        new = For_paid_game_info_1()
                        new.game_id = 1
                        new.players = 1
                        new.player1_id = user.user_tg_id
                        new.player1_count = 0
                        new.player2_count = 0
                        new.play = 1
                        progress = session.query(Progress).filter(Progress.user_tg_id == int(tg_id)).filter(
                            Progress.gam_id == 1).first()
                        if progress is None:
                            new1 = Progress()
                            new1.gam_id = 1
                            new1.user_tg_id = int(tg_id)
                            new1.lvl = 1
                            session.add(new1)
                            session.commit()
                            ch = 1
                        else:
                            ch = (progress.lvl) % 50 + 1
                            progress.lvl = progress.lvl + 1
                        session.add(progress)
                        session.add(new)
                        session.commit()
                        vop = session.query(Paid_game_info_1).filter(Paid_game_info_1.id == ch).first()
                        kl = InlineKeyboardMarkup(row_width=2)
                        kl.add(InlineKeyboardButton(f'–¢–æ–ª—å–∫–æ {user.name}', callback_data='pl_1'),
                               InlineKeyboardButton(f'–¢–æ–ª—å–∫–æ {user.partner_name}', callback_data='pl_2'))
                        kl.add(InlineKeyboardButton('–û–±–∞ –ø—Ä–∞–≤—ã üòé', callback_data='pl_3'),
                               InlineKeyboardButton("–û–±–∞ –æ—à–∏–±–ª–∏—Å—å  üôä", callback_data='pl_4'))
                        await bot.send_message(chat_id=tg_id,
                                               text=f"–û—Ç–≤–µ—Ç—å—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–º–µ—Ç—å—Ç–µ –∫—Ç–æ –∏–∑ –≤–∞—Å –ø—Ä–∞–≤ ‚úÖ\n\n{vop.caption}",
                                               reply_markup=kl)
            elif paid_game_id == 2:
                f = 0
                if len(callback_query.data.split('_')) == 6:
                    partner = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                    if partner is None or user.partner_phone_number is None or partner.partner_phone_number != user.phone_number:
                        await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                        text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –º—ã –≤–∞–º –ø–æ–º–æ–∂–µ–º",
                                                        show_alert=True)
                    else:
                        finish_all_game(tg_id)
                        finish_all_game(partner.user_tg_id)
                        kl = InlineKeyboardMarkup(row_width=2)
                        kl.add(InlineKeyboardButton(f'{beatufull_str(user.name)}', callback_data='play_paid_game_2_1'),
                               InlineKeyboardButton(f'{beatufull_str(user.partner_name)}',
                                                    callback_data='play_paid_game_2_2'))
                        t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                        kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_2_{t}_{b}'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text="–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ç–æ –∏–∑ –≤–∞—Å –Ω–∞—á–Ω—ë—Ç –∏–≥—Ä—É üéØ", reply_markup=kl)
                elif len(callback_query.data.split('_')) == 5:
                    partner = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                    if partner is not None:
                        await bot.edit_message_text(text="–ò–≥—Ä–∞ *–ì–æ–≤–æ—Ä–∏ –∏–ª–∏ –ø–æ–¥—á–∏–Ω—è–π—Å—è* –Ω–∞—á–∞–ª–∞—Å—å",
                                                    message_id=callback_query.message.message_id, chat_id=tg_id,
                                                    parse_mode=ParseMode.MARKDOWN)
                        n = For_paid_game_info_2()
                        n.play = 1
                        n.player1_id = tg_id
                        n.player2_id = partner.user_tg_id
                        n.game_id = 2
                        n.player1_count = 0
                        n.player2_count = 0
                        c = int(callback_query.data.split('_')[4])
                        n.hwo_last = c
                        session.add(n)
                        session.commit()
                        gam = session.query(For_paid_game_info_2).filter(For_paid_game_info_2.play == 1).filter(
                            For_paid_game_info_2.player1_id == tg_id).filter(
                            For_paid_game_info_2.player2_id == partner.user_tg_id).filter(
                            For_paid_game_info_2.hwo_last == c).first()
                        if c == 1:
                            kl = InlineKeyboardMarkup(row_width=2)
                            kl.add(InlineKeyboardButton("–û—Ç–≤–µ—á–∞–π ü§ì", callback_data='play_paid_game_2_2_1_0'),
                                   InlineKeyboardButton("–í—ã–ø–æ–ª–Ω—è–π üí™", callback_data='play_paid_game_2_2_2_0'))
                            kl.add(InlineKeyboardButton('–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É ‚ùå', callback_data=f"break_2_{gam.id}"))
                            await bot.send_message(chat_id=tg_id,
                                                   text="–ò–≥—Ä–∞ *–ì–æ–≤–æ—Ä–∏ –∏–ª–∏ –ø–æ–¥—á–∏–Ω—è–π—Å—è*\n\n–°–µ–π—á–∞—Å –≤–∞—à —Ö–æ–¥ –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ, —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å",
                                                   reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                        elif c == 2:
                            kl = InlineKeyboardMarkup(row_width=2)
                            kl.add(InlineKeyboardButton("–û—Ç–≤–µ—á–∞–π ü§ì", callback_data='play_paid_game_2_1_1_0'),
                                   InlineKeyboardButton("–í—ã–ø–æ–ª–Ω—è–π üí™", callback_data='play_paid_game_2_1_2_0'))
                            kl.add(InlineKeyboardButton('–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É ‚ùå', callback_data=f"break_2_{gam.id}"))
                            await bot.send_message(chat_id=partner.user_tg_id,
                                                   text="–ò–≥—Ä–∞ *–ì–æ–≤–æ—Ä–∏ –∏–ª–∏ –ø–æ–¥—á–∏–Ω—è–π—Å—è*\n\n–°–µ–π—á–∞—Å –≤–∞—à —Ö–æ–¥ –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ, —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å",
                                                   reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                elif len(callback_query.data.split('_')) == 7:
                    partner = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                    c = int(callback_query.data.split('_')[4])
                    d = int(callback_query.data.split('_')[5])
                    await bot.edit_message_text(chat_id=tg_id, text='–í–∞—à–µ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É –ø—Ä–∏—à–ª–æ –∑–∞–¥–∞–Ω–∏–µ',
                                                message_id=callback_query.message.message_id)
                    ch = -1
                    gam = session.query(For_paid_game_info_2).filter(For_paid_game_info_2.play == 1).filter(
                        For_paid_game_info_2.player1_id == tg_id).filter(
                        For_paid_game_info_2.player2_id == partner.user_tg_id).first()
                    if gam is None:
                        gam = session.query(For_paid_game_info_2).filter(For_paid_game_info_2.play == 1).filter(
                            For_paid_game_info_2.player2_id == tg_id).filter(
                            For_paid_game_info_2.player1_id == partner.user_tg_id).first()
                        gam.player2_count += 3
                    else:
                        gam.player1_count += 3
                    if d == 1:
                        progress = session.query(Progress).filter(
                            Progress.user_tg_id == int(partner.user_tg_id)).filter(
                            Progress.gam_id == 2).filter(Progress.dop_info == '–í–æ–ø—Ä–æ—Å—ã').first()
                        if progress is None:
                            ch = 1
                            new = Progress()
                            new.lvl = 1
                            new.gam_id = 2
                            new.user_tg_id = partner.user_tg_id
                            new.dop_info = '–í–æ–ø—Ä–æ—Å—ã'
                            session.add(new)
                            session.commit()
                        else:
                            ch = progress.lvl % 25 + 1
                            progress.lvl = progress.lvl + 1
                            session.add(progress)
                            session.commit()
                    else:
                        progress = session.query(Progress).filter(
                            Progress.user_tg_id == int(partner.user_tg_id)).filter(
                            Progress.gam_id == 2).filter(Progress.dop_info == '–î–µ–π—Å—Ç–≤–∏—è').first()
                        if progress is None:
                            ch = 26
                            new = Progress()
                            new.lvl = 26
                            new.gam_id = 2
                            new.dop_info = '–î–µ–π—Å—Ç–≤–∏—è'
                            new.user_tg_id = partner.user_tg_id
                            session.add(new)
                            session.commit()
                        else:
                            if progress.lvl == 50:
                                progress.lvl = 25
                            progress.lvl += 1
                            ch = progress.lvl
                            session.add(progress)
                            session.commit()
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(InlineKeyboardButton("–û—Ç–≤–µ—á–∞–π ü§ì", callback_data='play_paid_game_2_2_1_0'),
                           InlineKeyboardButton("–í—ã–ø–æ–ª–Ω—è–π üí™", callback_data='play_paid_game_2_2_2_0'))
                    kl.add(InlineKeyboardButton('–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É ‚ùå', callback_data=f"break_2_{gam.id}"))
                    game = session.query(Paid_game_info_2).filter(Paid_game_info_2.id == ch).first()
                    await bot.send_message(chat_id=partner.user_tg_id,
                                           text=f'*{game.dop_info}*\n\n{game.caption}\n\n–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å –≤–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –∏–≥—Ä—É',
                                           parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            elif paid_game_id == 3:
                if len(callback_query.data.split('_')) == 6:
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    kl = InlineKeyboardMarkup(row_width=3)
                    kl.add(
                        InlineKeyboardButton('–†–∞–Ω–¥–æ–º üé≤', callback_data=f'play_paid_game_{paid_game_id}_{1}_{t}_{b}'),
                        InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è', callback_data=f'play_paid_game_{paid_game_id}_{2}_{t}_{b}'),
                        InlineKeyboardButton('–ó–∞–¥–∞–Ω–∏—è üßê', callback_data=f'play_paid_game_{paid_game_id}_{3}_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_3_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')
                           )
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ üéØ', reply_markup=kl)
                elif len(callback_query.data.split('_')) == 7:
                    tip = int(callback_query.data.split('_')[4])
                    ch = -1
                    if tip == 1:
                        ch = random.randint(1, 40)
                    elif tip == 2:
                        ch = random.randint(26, 40)
                    else:
                        ch = random.randint(1, 25)
                    game = session.query(Paid_game_info_3).filter(Paid_game_info_3.id == ch).first()
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    if game.dop_info == '–ó–∞–¥–∞–Ω–∏–µ':
                        kl = InlineKeyboardMarkup(row_width=3)
                        kl.add(InlineKeyboardButton("–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ",
                                                    callback_data=f'play_paid_game_{paid_game_id}_{1}_{t}_{b}_1'))
                        kl.add(InlineKeyboardButton('–†–∞–Ω–¥–æ–º üé≤',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{1}_{t}_{b}'),
                               InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{2}_{t}_{b}'),
                               InlineKeyboardButton('–ó–∞–¥–∞–Ω–∏—è üßê',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{3}_{t}_{b}'))
                        kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_3_{t}_{b}'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                        await bot.edit_message_text(message_id=callback_query.message.message_id, chat_id=tg_id,
                                                    text=f'*–°–µ–∫—Å –ø–æ-–Ω–æ–≤–æ–º—É*\n\n{game.caption}',
                                                    parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                    else:
                        kl = InlineKeyboardMarkup(row_width=3)
                        kl.add(InlineKeyboardButton("–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ",
                                                    callback_data=f'play_paid_game_{paid_game_id}_{1}_{t}_{b}_1'))
                        kl.add(InlineKeyboardButton('–†–∞–Ω–¥–æ–º üé≤',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{1}_{t}_{b}'),
                               InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{2}_{t}_{b}'),
                               InlineKeyboardButton('–ó–∞–¥–∞–Ω–∏—è üßê',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{3}_{t}_{b}'))
                        kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_3_{t}_{b}'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')
                               )
                        await bot.edit_message_text(message_id=callback_query.message.message_id, chat_id=tg_id,
                                                    text=f'*{game.dop_info}*\n\n{game.caption}',
                                                    parse_mode=ParseMode.MARKDOWN, reply_markup=kl)


                elif len(callback_query.data.split('_')) == 8:
                    tip = int(callback_query.data.split('_')[4])
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    kl = InlineKeyboardMarkup()
                    kl = InlineKeyboardMarkup(row_width=3)
                    kl.add(
                        InlineKeyboardButton('–†–∞–Ω–¥–æ–º üé≤', callback_data=f'play_paid_game_{paid_game_id}_{1}_{t}_{b}'),
                        InlineKeyboardButton('–ü–æ–∑—ã üßò‚Äç‚ôÄÔ∏è', callback_data=f'play_paid_game_{paid_game_id}_{2}_{t}_{b}'),
                        InlineKeyboardButton('–ó–∞–¥–∞–Ω–∏—è üßê', callback_data=f'play_paid_game_{paid_game_id}_{3}_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_3_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')
                           )
                    await bot.edit_message_text(message_id=callback_query.message.message_id, chat_id=tg_id,
                                                text=f'–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã —á—Ç–æ –±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–∞—Ä—Ç–æ—á–∫–µ üéØ',
                                                parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                    await up_balance(tg_id, 2)
            elif paid_game_id == 4:
                if len(callback_query.data.split('_')) == 6:
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                    text='–≠—Ç–∞ –∏–≥—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –≤–∞—à–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!', )
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(InlineKeyboardButton('–ü—Ä–∞–≤–¥–∞ ‚úÖ', callback_data=f'play_paid_game_{paid_game_id}_pr_{t}_{b}'),
                           InlineKeyboardButton('–ù–∞–∫–∞–∑–∞–Ω–∏–µ üî¥',
                                                callback_data=f'play_paid_game_{paid_game_id}_nak_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–í –ø–µ—Ä–µ–º–µ—à–∫—É üé≤',
                                                callback_data=f'play_paid_game_{paid_game_id}_per_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_4_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')
                           )
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã',
                                                reply_markup=kl)
                elif len(callback_query.data.split('_')) == 7:
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    kl = InlineKeyboardMarkup()
                    if callback_query.data.split('_')[4] == 'per':
                        kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data=callback_query.data + '_1'),
                               InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                    callback_data=f'play_paid_game_{paid_game_id}_per_{t}_{b}'))
                    else:
                        kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data=callback_query.data + '_1'),
                               InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_4_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    ran = -1
                    if callback_query.data.split('_')[4] == 'pr':
                        ran = random.randint(1, 25)
                    elif callback_query.data.split('_')[4] == 'nak':
                        ran = random.randint(26, 50)
                    else:
                        ran = random.randint(1, 50)
                    cap = session.query(Paid_game_info_4).filter(
                        Paid_game_info_4.id == ran).first()
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'*{cap.dop_info}*\n\n{cap.caption}',
                                                reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                elif len(callback_query.data.split('_')) == 8:
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    kl = InlineKeyboardMarkup()
                    if callback_query.data.split('_')[4] == 'per':
                        kl.add(
                            InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                 callback_data=f'play_paid_game_{paid_game_id}_per_{t}_{b}'))
                    else:
                        kl.add(
                            InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                 callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_4_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã',
                                                reply_markup=kl)
                    await up_balance(tg_id, 5)
            elif paid_game_id == 5:
                if len(callback_query.data.split('_')) == 6:
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                    text='–†–µ—Ü–µ–ø—Ç—ã –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏–π', )
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(
                        InlineKeyboardButton('–ß—É–≤—Å—Ç–≤–∞ üòç', callback_data=f'play_paid_game_{paid_game_id}_chyv_{t}_{b}'),
                        InlineKeyboardButton('–°—Ç—Ä–∞—Å—Ç—å ‚ù§Ô∏è‚Äçüî•',
                                             callback_data=f'play_paid_game_{paid_game_id}_strast_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–†–æ–º–∞–Ω—Ç–∏–∫–∞ üåπ',
                                                callback_data=f'play_paid_game_{paid_game_id}_rom_{t}_{b}'),
                           InlineKeyboardButton('–í –ø–µ—Ä–µ–º–µ—à–∫—É üé≤',
                                                callback_data=f'play_paid_game_{paid_game_id}_per_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_5_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–≥—Ä—ã:',
                                                reply_markup=kl)
                elif len(callback_query.data.split('_')) == 7:
                    kl = InlineKeyboardMarkup()
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    ran = -1
                    if callback_query.data.split('_')[4] == 'chyv':
                        ran = random.randint(1, 5)
                        kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data=callback_query.data + '_1'),
                               InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}')
                               )
                    elif callback_query.data.split('_')[4] == 'strast':
                        ran = random.randint(11, 15)
                        kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data=callback_query.data + '_1'),
                               InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}')
                               )
                    elif callback_query.data.split('_')[4] == 'rom':
                        ran = random.randint(21, 25)
                        kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data=callback_query.data + '_1'),
                               InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                    callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}'))
                    else:
                        cur = random.randint(1, 3)
                        if cur == 1:
                            ran = random.randint(1, 5)
                        elif cur == 2:
                            ran = random.randint(11, 15)
                        else:
                            ran = random.randint(21, 25)
                        kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data=callback_query.data + '_1'),
                               InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                    callback_data=f'play_paid_game_{paid_game_id}_per_{t}_{b}'))
                    woman = session.query(Paid_game_info_5).filter(Paid_game_info_5.id == ran).first()
                    man = session.query(Paid_game_info_5).filter(Paid_game_info_5.id == ran + 5).first()
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_5_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f"*{woman.dop_info.split('_')[0]}*\n\n*{man.dop_info.split('_')[1]}*\n{man.caption}\n\n*{woman.dop_info.split('_')[1]}*\n{woman.caption}",
                                                reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                elif len(callback_query.data.split('_')) == 8:
                    kl = InlineKeyboardMarkup()
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    ran = -1
                    if callback_query.data.split('_')[4] == 'chyv':

                        kl.add(
                            InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                 callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}')
                        )
                    elif callback_query.data.split('_')[4] == 'strast':

                        kl.add(
                            InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                 callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}')
                        )
                    elif callback_query.data.split('_')[4] == 'rom':

                        kl.add(
                            InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                 callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}'))
                    else:

                        kl.add(
                            InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚ñ∂Ô∏è',
                                                 callback_data=f'play_paid_game_{paid_game_id}_per_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_5_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                reply_markup=kl, text='üëç –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–≥—Ä—ã')
                    await up_balance(tg_id, 5)
            elif paid_game_id == 6:
                if len(callback_query.data.split('_')) == 6:
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    kl = InlineKeyboardMarkup()
                    all_game = session.query(For_paid_game_info_6).filter(
                        For_paid_game_info_6.user_tg_id == tg_id).all()
                    for elem in all_game:
                        if elem.do == 'No':
                            kl.add(InlineKeyboardButton(elem.name + 'üîò',
                                                        callback_data=f'play_paid_game_{paid_game_id}_{elem.id}_{t}_{b}'))
                        else:
                            kl.add(InlineKeyboardButton(elem.name + 'üü¢',
                                                        callback_data=f'play_paid_game_{paid_game_id}_{elem.id}_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'paid_game_6_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –∏–≥—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —É–∂–µ —Å–¥–µ–ª–∞–ª–∏ –æ—Ç–º–µ—á–µ–Ω—ã üü¢ —ç–º–æ–¥–∑–∏',
                                                reply_markup=kl)
                elif len(callback_query.data.split('_')) == 7:
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    elem_id = int(callback_query.data.split('_')[4])
                    elem = session.query(For_paid_game_info_6).filter(For_paid_game_info_6.id == elem_id).first()
                    kl = InlineKeyboardMarkup(row_width=2)
                    elem2 = session.query(Paid_game_info_6).filter(Paid_game_info_6.dop_info == elem.name).first()
                    if elem.do == "No":
                        kl.add(
                            InlineKeyboardButton('–°–∫–∏–Ω—É—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä—É üïä',
                                                 callback_data=f'play_paid_game_6_{elem2.id}_0_{t}_{b}'),
                            InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–∏—Ç—å ‚úÖ', callback_data=f'play_paid_game_6_{elem2.id}_1_{t}_{b}'))
                    else:
                        kl.add(
                            InlineKeyboardButton('–°–∫–∏–Ω—É—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä—É üïä',
                                                 callback_data=f'play_paid_game_6_{elem2.id}_0_{t}_{b}'),
                            InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ',
                                                 callback_data=f'play_paid_game_6_{elem2.id}_1_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ö –∑–∞–¥–∞–Ω–∏—è–º üìù', callback_data=f'play_paid_game_6_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'*{elem2.dop_info}*\n{elem2.caption}',
                                                parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                elif len(callback_query.data.split('_')) == 8:
                    t, b = callback_query.data.split('_')[6], callback_query.data.split('_')[7]
                    elem_id = int(callback_query.data.split('_')[4])
                    d = int(callback_query.data.split('_')[5])
                    elem = session.query(Paid_game_info_6).filter(Paid_game_info_6.id == elem_id).first()
                    if d == 0:
                        partner = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                        if partner is None:
                            await bot.answer_callback_query(
                                text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –≤ –±–∞–∑–µ üòî\n–ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —á—Ç–æ –¥–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
                                callback_query_id=callback_query.id, show_alert=True)
                        else:

                            await bot.send_message(chat_id=partner.user_tg_id,
                                                   text=f'*{elem.dop_info}*\n{elem.caption}',
                                                   parse_mode=ParseMode.MARKDOWN)
                            await bot.answer_callback_query(
                                text="–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–¥–∞–Ω–∏–µ –≤–∞—à–µ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É, –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–æ–ª—É—á–∏—Ç–µ sex-coin üòâ",
                                callback_query_id=callback_query.id, show_alert=True)

                    elif d == 1:
                        elem2 = session.query(For_paid_game_info_6).filter(
                            For_paid_game_info_6.user_tg_id == tg_id).filter(
                            For_paid_game_info_6.name == elem.dop_info).first()
                        if elem2.do == "No":

                            await bot.answer_callback_query(
                                text="–ö—Ä—É—Ç–æ!\n–ú—ã –Ω–∞—á–∏—Å–ª–∏–ª–∏–º 3 sex-coin –≤–∞–º –Ω–∞ –±–∞–ª–∞–Ω—Å üòé, –µ—Å–ª–∏ –≤—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç",
                                callback_query_id=callback_query.id, show_alert=True)

                            elem2.do = "Yes"
                            up_balance_(tg_id, 3)
                            session.add(elem2)
                            session.commit()
                        else:
                            await bot.answer_callback_query(
                                text="–í—ã —É–∂–µ —ç—Ç–æ –≤—ã–ø–æ–ª–Ω—è–ª–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –∏–≥—Ä—É",
                                callback_query_id=callback_query.id, show_alert=True)
                        kl = InlineKeyboardMarkup()
                        kl.add(InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚è≠', callback_data=f'play_paid_game_6_{t}_{b}'))
                        kl.add(InlineKeyboardButton('–°–∫–∏–Ω—É—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä—É üïä',
                                                    callback_data=f'play_paid_game_6_{elem.id}_0_{t}_{b}'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                        await bot.edit_message_reply_markup(chat_id=tg_id,
                                                            message_id=callback_query.message.message_id,
                                                            reply_markup=kl)
            elif paid_game_id == 7:
                if len(callback_query.data.split('_')) == 6:
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(InlineKeyboardButton("–§–ª–∏—Ä—Ç üòè", callback_data=f'play_paid_game_7_1_{t}_{b}'),
                           InlineKeyboardButton("C–±–ª–∏–∂–µ–Ω–∏–µ üîó", callback_data=f'play_paid_game_7_2_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ ü§©", callback_data=f'play_paid_game_7_3_{t}_{b}'),
                           InlineKeyboardButton("–†–∞–Ω–¥–æ–º üé≤", callback_data=f'play_paid_game_7_4_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'paid_game_7_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text="–í—ã–±–∏—Ä–∞–π—Ç–µ –∏–ª–∏ –¥–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∏ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤–µ—á–µ—Ä, –∞ –≤–µ—á–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∑–∞–ø–æ–º–Ω–∏—Ç–µ –Ω–∞–¥–æ–ª–≥–æ.",
                                                reply_markup=kl)
                elif len(callback_query.data.split('_')) == 7:
                    t = int(callback_query.data.split('_')[4])
                    ch = -1
                    if t <= 3:
                        ch = random.randint(0, 8) * 3 + t
                    else:
                        ch = random.randint(1, 27)
                    elem = session.query(Paid_game_info_7).filter(Paid_game_info_7.id == ch).first()
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data=callback_query.data + '_1'))
                    kl.add(InlineKeyboardButton("–§–ª–∏—Ä—Ç üòè", callback_data=f'play_paid_game_7_1_{t}_{b}'),
                           InlineKeyboardButton("C–±–ª–∏–∂–µ–Ω–∏–µ üîó", callback_data=f'play_paid_game_7_2_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ ü§©", callback_data=f'play_paid_game_7_3_{t}_{b}'),
                           InlineKeyboardButton("–†–∞–Ω–¥–æ–º üé≤", callback_data=f'play_paid_game_7_4_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'paid_game_7_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'*{elem.dop_info}*\n\n{elem.caption}', reply_markup=kl,
                                                parse_mode=ParseMode.MARKDOWN)
                elif len(callback_query.data.split('_')) == 8:
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(InlineKeyboardButton("–§–ª–∏—Ä—Ç üòè", callback_data=f'play_paid_game_7_1_{t}_{b}'),
                           InlineKeyboardButton("C–±–ª–∏–∂–µ–Ω–∏–µ üîó", callback_data=f'play_paid_game_7_2_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ ü§©", callback_data=f'play_paid_game_7_3_{t}_{b}'),
                           InlineKeyboardButton("–†–∞–Ω–¥–æ–º üé≤", callback_data=f'play_paid_game_7_4_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'paid_game_7_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text="–í—ã–±–∏—Ä–∞–π—Ç–µ –∏–ª–∏ –¥–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∏ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤–µ—á–µ—Ä, –∞ –≤–µ—á–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∑–∞–ø–æ–º–Ω–∏—Ç–µ –Ω–∞–¥–æ–ª–≥–æ.",
                                                reply_markup=kl)
                    await up_balance(tg_id, 2)
            elif paid_game_id == 8:
                if len(callback_query.data.split('_')) == 6:
                    kl = InlineKeyboardMarkup()
                    ans = ''
                    ans += '–°—Ç–∞—Ä—Ç üö© (–í—ã —Ç—É—Ç) \n'
                    mas = ['0Ô∏è‚É£', '1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£']
                    for i in range(47):
                        c = i + 1
                        for j in str(c):
                            ans += mas[int(j)]
                        ans += '\n'
                    ans += '–§–∏–Ω–∏—à üèÅ\n\n'
                    ans += f"–°–µ–π—á–∞—Å —Ö–æ–¥–∏—Ç {user.name}"
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    kl.add(InlineKeyboardButton('–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤', callback_data=f'play_paid_game_8_1_0_0_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'paid_game_8_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id, text=ans,
                                                reply_markup=kl)
                elif len(callback_query.data.split('_')) == 9:
                    t, b = callback_query.data.split('_')[7], callback_query.data.split('_')[8]
                    c1, c2 = int(callback_query.data.split('_')[5]), int(callback_query.data.split('_')[6])
                    if callback_query.data.split('_')[4] == '1':
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text=f'–°–º–æ—Ç—Ä–∏–º –Ω–∞ —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥–≤–∏–Ω–µ—Ç—Å—è {user.name}')
                    else:
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text=f'–°–º–æ—Ç—Ä–∏–º –Ω–∞ —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥–≤–∏–Ω–µ—Ç—Å—è {user.partner_name}')
                    a = await bot.send_dice(chat_id=tg_id)
                    await asyncio.sleep(3.3)
                    zn = int(a.dice.values['value'])
                    if callback_query.data.split('_')[4] == '1':
                        tec = c1 + zn
                        if tec > 47:
                            kl = InlineKeyboardMarkup()
                            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_8_{t}_{b}'),
                                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                            await bot.send_message(chat_id=tg_id,
                                                   text=f'{user.name} –ø–æ–±–µ–¥–∏–ª! ü•≥\n–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç—ã –∑–∞—á–∏—Å–ª–µ–Ω–Ω—ã sex-coin',
                                                   reply_markup=kl)
                            await up_balance(tg_id, 20)
                        else:
                            elem = session.query(Paid_game_info_8).filter(Paid_game_info_8.id == tec).first()
                            kl = InlineKeyboardMarkup()
                            kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–∏–ª ‚úÖ',
                                                        callback_data=f'play_paid_game_8_1_{tec}_{c2}_0_{t}_{b}'))
                            kl.add(InlineKeyboardButton('–°—Ç–æ—è—Ç—å –Ω–∞ –º–µ—Å—Ç–µ ‚ùå',
                                                        callback_data=f'play_paid_game_8_1_{c1}_{c2}_0_{t}_{b}'))
                            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_8_{t}_{b}'),
                                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                            await bot.send_message(chat_id=tg_id,
                                                   text=f'{user.name} –æ—Ç–º–µ—Ç—Ç–µ\n\n*{elem.dop_info}*\n\n{elem.caption}',
                                                   reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                    else:
                        tec = c2 + zn
                        if tec > 47:
                            kl = InlineKeyboardMarkup()
                            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_8_{t}_{b}'),
                                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                            await bot.send_message(chat_id=tg_id,
                                                   text=f'{user.partner_name} –ø–æ–±–µ–¥–∏–ª! ü•≥\n–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç—ã –∑–∞—á–∏—Å–ª–µ–Ω–Ω—ã sex-coin',
                                                   reply_markup=kl)
                            await up_balance(tg_id, 20)
                        else:
                            elem = session.query(Paid_game_info_8).filter(Paid_game_info_8.id == tec).first()
                            kl = InlineKeyboardMarkup()
                            kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–∏–ª ‚úÖ',
                                                        callback_data=f'play_paid_game_8_2_{c1}_{tec}_0_{t}_{b}'))
                            kl.add(InlineKeyboardButton('–°—Ç–æ—è—Ç—å –Ω–∞ –º–µ—Å—Ç–µ ‚ùå',
                                                        callback_data=f'play_paid_game_8_2_{c1}_{c2}_0_{t}_{b}'))
                            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_8_{t}_{b}'),
                                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                            await bot.send_message(chat_id=tg_id,
                                                   text=f'{user.partner_name} –æ—Ç–º–µ—Ç—Ç–µ\n\n*{elem.dop_info}*\n\n{elem.caption}',
                                                   reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                elif len(callback_query.data.split('_')) == 10:
                    kl = InlineKeyboardMarkup()
                    c1, c2 = int(callback_query.data.split('_')[5]), int(callback_query.data.split('_')[6])
                    mas = ['0Ô∏è‚É£', '1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£']
                    ans = '–°—Ç–∞—Ä—Ç üö© '
                    c = 0
                    if c1 == c and c2 == c:
                        ans += '–í—ã —Ç—É—Ç'
                    elif c1 == c:
                        ans += user.name
                    elif c2 == c:
                        ans += user.partner_name
                    ans += '\n'
                    for i in range(47):
                        c = i + 1
                        for j in str(c):
                            ans += mas[int(j)]
                        ans += ' '
                        if c1 == c and c2 == c:
                            ans += '–í—ã —Ç—É—Ç'
                        elif c1 == c:
                            ans += user.name
                        elif c2 == c:
                            ans += user.partner_name
                        ans += '\n'
                    ans += '–§–∏–Ω–∏—à üèÅ\n\n'
                    t, b = callback_query.data.split('_')[8], callback_query.data.split('_')[9]
                    if callback_query.data.split('_')[4] == '1':
                        ans += f"–°–µ–π—á–∞—Å —Ö–æ–¥–∏—Ç {user.partner_name}"
                        kl.add(InlineKeyboardButton('–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤',
                                                    callback_data=f'play_paid_game_8_2_{c1}_{c2}_{t}_{b}'))
                    else:
                        ans += f"–°–µ–π—á–∞—Å —Ö–æ–¥–∏—Ç {user.name}"
                        kl.add(InlineKeyboardButton('–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤',
                                                    callback_data=f'play_paid_game_8_1_{c1}_{c2}_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_8_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id, text=ans,
                                                reply_markup=kl)
            elif paid_game_id == 10:  # –¢–∞–±–ª–∏—Ü–∞ 9
                if len(callback_query.data.split('_')) == 6:
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(InlineKeyboardButton('–î–ª—è –Ω–µ—ë üë©', callback_data=f'play_paid_game_10_1_{t}_{b}'),
                           InlineKeyboardButton('–î–ª—è –Ω–µ–≥–æ üë®', callback_data=f'play_paid_game_10_2_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'paid_game_10_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text='–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ç–æ –∏–∑ –≤–∞—Å –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏–µ üéØ', reply_markup=kl)
                elif len(callback_query.data.split('_')) == 7:
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(InlineKeyboardButton("–ù–µ –≤—ã—à–ª–æ ‚ùå", callback_data=f'play_paid_game_10_1_0_{t}_{b}'),
                           InlineKeyboardButton('–ü–æ–ª—É—á–∏–ª–æ—Å—å ‚úÖ', callback_data=f'play_paid_game_10_1_1_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'paid_game_10_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    ch = -1
                    t = int(callback_query.data.split('_')[4])
                    if t == 1:
                        ch = random.randint(1, 10)
                    else:
                        ch = random.randint(11, 20)
                    game = session.query(Paid_game_info_9).filter(Paid_game_info_9.id == ch).first()
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'*{game.dop_info}*\n\n{game.caption}',
                                                parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                elif len(callback_query.data.split('_')) == 8:
                    t, b = callback_query.data.split('_')[6], callback_query.data.split('_')[7]
                    sd = int(callback_query.data.split('_')[5])
                    kl = InlineKeyboardMarkup()
                    kl.add(InlineKeyboardButton('–î–ª—è –Ω–µ—ë üë©', callback_data=f'play_paid_game_10_1_{t}_{b}'),
                           InlineKeyboardButton('–î–ª—è –Ω–µ–≥–æ üë®', callback_data=f'play_paid_game_10_2_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'paid_game_10_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    if sd == 1:
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text="–ö—Ä—É—Ç–æ! ü§ü\n\n*Sex-coin* –∑–∞—á–∏—Å–ª–µ–Ω–Ω—ã –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–¥–∞–Ω–∏–µ üéØ",
                                                    parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                        await up_balance(tg_id, 5)
                    else:
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ üîÑ\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–¥–∞–Ω–∏–µ üéØ",
                                                    parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            elif paid_game_id == 9:  # –¢–∞–±–ª–∏—Ü–∞ 10
                if len(callback_query.data.split('_')) == 6:
                    ran = random.randint(1, 38)
                    gg = session.query(For_paid_game_info_9).filter(For_paid_game_info_9.id == ran).first()
                    poz = session.query(Poses).filter(Poses.pos_id == gg.pose_id).first()
                    f = int(poz.pos_lvl) * '‚≠êÔ∏è'
                    kl = InlineKeyboardMarkup()
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data=callback_query.data + '_1'),
                           InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∞—è –ø–æ–∑–∞ ‚è≠", callback_data=callback_query.data))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'__paid_game_9_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                    await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                         caption=f'*{gg.name}*\n\n{gg.discrip}', reply_markup=kl,
                                         parse_mode=ParseMode.MARKDOWN)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                elif len(callback_query.data.split('_')) == 7:
                    kl = InlineKeyboardMarkup()
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    kl.add(
                        InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∞—è –ø–æ–∑–∞ ‚è≠",
                                             callback_data=callback_query.data[0:len(callback_query.data) - 2]))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'__paid_game_9_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                    await bot.edit_message_reply_markup(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                        reply_markup=kl)
                    await up_balance(tg_id, 5)
            elif paid_game_id == 11:
                if len(callback_query.data.split('_')) == 6:
                    ch = random.randint(1, 24)
                    kl = InlineKeyboardMarkup(row_width=2)
                    t, b = callback_query.data.split('_')[4], callback_query.data.split('_')[5]
                    kl.add(InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å üòî", callback_data=f'play_paid_game_11_0_{t}_{b}'),
                           InlineKeyboardButton("–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ", callback_data=f'play_paid_game_11_1_{t}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'paid_game_11_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    game = session.query(Paid_game_info_11).filter(Paid_game_info_11.id == ch).first()
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'*{game.dop_info}*\n\n{game.caption}', reply_markup=kl,
                                                parse_mode=ParseMode.MARKDOWN)
                elif len(callback_query.data.split('_')) == 7:
                    t, b = callback_query.data.split('_')[5], callback_query.data.split('_')[6]
                    kl = InlineKeyboardMarkup(row_width=2)
                    kl.add(InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚è©', callback_data=f'play_paid_game_11_{t}_{b}'))
                    kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'paid_game_11_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'), )
                    t = int(callback_query.data.split('_')[4])
                    if t == 1:
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text='–ö—Ä—É—Ç–æ! üòé\n\n*3 Sex-coin* –∑–∞—á–∏—Å–ª–µ–Ω–Ω—ã –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å (–µ—Å–ª–∏ –≤—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç–µ –ª–∏–º–∏—Ç)',
                                                    reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                        up_balance_(tg_id, 3)
                    else:
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text='–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑ üòâ',
                                                    reply_markup=kl)
        elif callback_query.data == 'poses':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton("–ü–æ–∑–∞ –¥–Ω—è üìÖ", callback_data='play_free_game_1_p'))
            kl.add(InlineKeyboardButton("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–∑ üé≤", callback_data='free_game_3_p'))
            kl.add(InlineKeyboardButton("–ú–æ–∏ –ø–æ–∑—ã üßò", callback_data='my_pose'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–°—ã–≥—Ä–∞–π—Ç–µ –≤ –∏–≥—Ä—É –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å–≤–æ–∏—Ö –ø–æ–∑ üîé', reply_markup=kl)
        elif callback_query.data == '_poses':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton("–ü–æ–∑–∞ –¥–Ω—è üìÖ", callback_data='play_free_game_1_p'))
            kl.add(InlineKeyboardButton("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–∑ üé≤", callback_data='free_game_3_p'))
            kl.add(InlineKeyboardButton("–ú–æ–∏ –ø–æ–∑—ã üßò", callback_data='my_pose'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.send_message(chat_id=tg_id,
                                   text='–°—ã–≥—Ä–∞–π—Ç–µ –≤ –∏–≥—Ä—É –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å–≤–æ–∏—Ö –ø–æ–∑ üîé', reply_markup=kl)
            await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
        elif callback_query.data == 'pl_1':  # –ü—Ä–∞–≤ —Ç–æ–ª—å–∫–æ —Ö–æ–∑—è–∏–Ω
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.player1_id == tg_id).filter(
                For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.play == 1).first()
            gam.player1_count = gam.player1_count + 5
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è üèÅ', callback_data='pl_end'),
                   InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚è≠', callback_data='pl_next'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text=f"*{beatufull_str(user.name)}: {gam.player1_count} –æ—á–∫–æ–≤*\n\n*{beatufull_str(user.partner_name)}: {gam.player2_count} –æ—á–∫–æ–≤*\n\n{excoduc_name(gam.player1_count, gam.player2_count, user.name, user.partner_name)}",
                                        reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
        elif callback_query.data == 'pl_2':  # 2 –ø–∞—Ä—Ç–Ω—ë—Ä
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.player1_id == tg_id).filter(
                For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.play == 1).first()
            gam.player2_count = gam.player2_count + 5
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è üèÅ', callback_data='pl_end'),
                   InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚è≠', callback_data='pl_next'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text=f"*{beatufull_str(user.name)}: {gam.player1_count} –æ—á–∫–æ–≤*\n\n*{beatufull_str(user.partner_name)}: {gam.player2_count} –æ—á–∫–æ–≤*\n\n{excoduc_name(gam.player1_count, gam.player2_count, user.name, user.partner_name)}",
                                        reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
        elif callback_query.data == 'pl_3':  # –æ–±–∞ –ø—Ä–∞–≤—ã
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.player1_id == tg_id).filter(
                For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.play == 1).first()
            gam.player2_count = gam.player2_count + 5
            gam.player1_count = gam.player1_count + 5
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è üèÅ', callback_data='pl_end'),
                   InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚è≠', callback_data='pl_next'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text=f"*{beatufull_str(user.name)}: {gam.player1_count} –æ—á–∫–æ–≤*\n\n*{beatufull_str(user.partner_name)}: {gam.player2_count} –æ—á–∫–æ–≤*\n\n{excoduc_name(gam.player1_count, gam.player2_count, user.name, user.partner_name)}",
                                        reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
        elif callback_query.data == 'pl_4':  # –æ–±–∞ –æ—à–∏–±–ª–∏—Å—å
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.player1_id == tg_id).filter(
                For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.play == 1).first()
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è üèÅ', callback_data='pl_end'),
                   InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚è≠', callback_data='pl_next'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text=f"*{beatufull_str(user.name)}: {gam.player1_count} –æ—á–∫–æ–≤*\n\n*{beatufull_str(user.partner_name)}: {gam.player2_count} –æ—á–∫–æ–≤*\n\n{excoduc_name(gam.player1_count, gam.player2_count, user.name, user.partner_name)}",
                                        reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
        elif callback_query.data == 'pl_next':
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.player1_id == tg_id).filter(
                For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.play == 1).first()
            progress = session.query(Progress).filter(Progress.user_tg_id == int(tg_id)).filter(
                Progress.gam_id == 1).first()
            if progress is None:
                new1 = Progress()
                new1.gam_id = 1
                new1.user_tg_id = int(tg_id)
                new1.lvl = 1
                session.add(new1)
                session.commit()
                ch = 1
            else:
                ch = (progress.lvl) % 50 + 1
                progress.lvl = progress.lvl + 1
            session.add(progress)
            session.commit()
            vop = session.query(Paid_game_info_1).filter(Paid_game_info_1.id == ch).first()
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton(f'–¢–æ–ª—å–∫–æ {user.name}', callback_data='pl_1'),
                   InlineKeyboardButton(f'–¢–æ–ª—å–∫–æ {user.partner_name}', callback_data='pl_2'))
            kl.add(InlineKeyboardButton('–û–±–∞ –ø—Ä–∞–≤—ã üòé', callback_data='pl_3'),
                   InlineKeyboardButton("–û–±–∞ –æ—à–∏–±–ª–∏—Å—å  üôä", callback_data='pl_4'))
            await bot.edit_message_text(message_id=callback_query.message.message_id, chat_id=tg_id,
                                        text=f"–û—Ç–≤–µ—Ç—å—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–º–µ—Ç—å—Ç–µ –∫—Ç–æ –∏–∑ –≤–∞—Å –ø—Ä–∞–≤ ‚úÖ\n\n{vop.caption}",
                                        reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
        elif callback_query.data == 'pl_end':
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.player1_id == tg_id).filter(
                For_paid_game_info_1.game_id == 1).filter(For_paid_game_info_1.play == 1).first()
            gam.play = 0

            await bot.edit_message_text(
                text=excoduc_name_end(gam.player1_count, gam.player2_count, user.name, user.partner_name),
                message_id=callback_query.message.message_id, chat_id=tg_id, parse_mode=ParseMode.MARKDOWN,
                reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')))
            await up_balance(tg_id, gam.player1_count)
        elif callback_query.data[0:len('wat_pres_')] == 'wat_pres_':
            pres_id = int(callback_query.data.split('_')[2])
            if pres_id == 1:
                kl = InlineKeyboardMarkup(row_width=2)
                kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='present'),
                       InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üîì", callback_data=f"open_present_{pres_id}"))
                kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text=f'–≠—Ç–æ –ø–æ–¥–∞—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–∞—ë—Ç—Å—è –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n'
                                                 f'–í —ç—Ç–æ–º –ø–æ–¥–∞—Ä–∫–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –∫–æ–ª–æ–¥–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –ø–æ–∑–∞–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º, –≤—Å–µ–≥–æ –ø—è—Ç—å –ø–æ–∑: 3 –ª–µ–≥–∫–∏–µ, 1 —Å—Ä–µ–¥–Ω—è—è, 1 —Ç—è–∂–µ–ª–∞—è',
                                            parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
        elif callback_query.data == 'store':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton("–ü—Ä–æ–º–æ–∫–æ–¥—ã üí±", callback_data='promo'))
            if user.buy_all == "N":
                kl.add(InlineKeyboardButton("–ü–ª–∞—Ç–Ω—ã–µ –∏–≥—Ä—ã üîí", callback_data='_paid_game'))
                kl.add(InlineKeyboardButton("–ü–∞–∫–∏ —Å –ø–æ–∑–∞–º–∏ üßò‚Äç‚ôÄÔ∏è", callback_data='pak_pose'))
                kl.add(InlineKeyboardButton('–ö—É–ø–∏—Ç—å –≤—Å–µ üí≥ (990 —Ä—É–±–ª–µ–π)', callback_data='buy_alll'))
            kl.add(InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å üÜô', callback_data='top_up'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text=f'–ú–∞–≥–∞–∑–∏–Ω üè™',
                                        parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
        elif callback_query.data == 'pak_pose':
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton('–û–±—ã—á–Ω–∞—è –∫–æ–ª–æ–¥–∞ - 100 sex-coin', callback_data='usual_pak'))
            kl.add(InlineKeyboardButton('–†–µ–¥–∫–∞—è –∫–æ–ª–æ–¥–∞ - 100 sex-coin', callback_data='rar_pak'))
            kl.add(InlineKeyboardButton('–≠–ø–∏—á–µ—Å–∫–∞—è –∫–æ–ª–æ–¥–∞ - 100 sex-coin', callback_data='epic_pak'))
            kl.add(InlineKeyboardButton('–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è –∫–æ–ª–æ–¥–∞ - 500 sex-coin', callback_data='legend_pak'))
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='store'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–æ–ª–æ–¥—É üìå', reply_markup=kl)
        elif callback_query.data == 'legend_pak':
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='pak_pose'),
                   InlineKeyboardButton('–ö—É–ø–∏—Ç—å (500 sex-coin)', callback_data='buy_legend_pak'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text="–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è –∫–æ–ª–æ–¥–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –ø–æ–∑–∞–º –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π. (100 –ø–æ–∑)",
                                        reply_markup=kl)
        elif callback_query.data == 'buy_legend_pak':
            if user.balance < 500:
                await bot.answer_callback_query(text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç sex-coin üòî",
                                                callback_query_id=callback_query.id, show_alert=True)
            else:
                user.balance = user.balance - 500
                session.add(user)
                session.commit()
                poses = session.query(Poses).all()
                l = [100, 100, 100, 100]
                for elem in poses:
                    if session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(
                            Open_poses.pos_id == elem.pos_id).first() == None:
                        if l[elem.pos_lvl] != 0:
                            l[elem.pos_lvl] -= 1
                            ne = Open_poses()
                            ne.pos_id = elem.pos_id
                            ne.name = elem.name
                            ne.user_id = tg_id
                            ne.pos_level = elem.pos_lvl
                            ne.see = "False"
                            session.add(ne)
                            session.commit()
                await bot.answer_callback_query(text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ü•≥\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑—ã –≤ —Å–≤–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏",
                                                callback_query_id=callback_query.id, show_alert=True)
        elif callback_query.data == 'epic_pak':
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='pak_pose'),
                   InlineKeyboardButton('–ö—É–ø–∏—Ç—å (100 sex-coin)', callback_data='buy_epic_pak'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text="–≠–ø–∏—á–µ—Å–∫–∞—è –∫–æ–ª–æ–¥–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑:\n    1 –ª–µ–≥–∫–∏–µ –ø–æ–∑—ã\n    1 —Å—Ä–µ–¥–Ω—è—è –ø–æ–∑–∞\n    3 —Ç—è–∂–µ–ª–∞—è –ø–æ–∑–∞",
                                        reply_markup=kl)
        elif callback_query.data == 'buy_epic_pak':
            if user.balance < 100:
                await bot.answer_callback_query(text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç sex-coin üòî",
                                                callback_query_id=callback_query.id, show_alert=True)
            else:
                user.balance = user.balance - 100
                session.add(user)
                session.commit()
                poses = session.query(Poses).all()
                l = [0, 1, 1, 3]
                for elem in poses:
                    if session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(
                            Open_poses.pos_id == elem.pos_id).first() == None:
                        if l[elem.pos_lvl] != 0:
                            l[elem.pos_lvl] -= 1
                            ne = Open_poses()
                            ne.pos_id = elem.pos_id
                            ne.name = elem.name
                            ne.user_id = tg_id
                            ne.pos_level = elem.pos_lvl
                            ne.see = "False"
                            session.add(ne)
                            session.commit()
                await bot.answer_callback_query(text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ü•≥\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑—ã –≤ —Å–≤–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏",
                                                callback_query_id=callback_query.id, show_alert=True)
        elif callback_query.data == 'rar_pak':
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='pak_pose'),
                   InlineKeyboardButton('–ö—É–ø–∏—Ç—å (100 sex-coin)', callback_data='buy_rar_pak'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text="–†–µ–¥–∫–∞—è –∫–æ–ª–æ–¥–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑:\n    1 –ª–µ–≥–∫–∏–µ –ø–æ–∑—ã\n    3 —Å—Ä–µ–¥–Ω—è—è –ø–æ–∑–∞\n    1 —Ç—è–∂–µ–ª–∞—è –ø–æ–∑–∞",
                                        reply_markup=kl)
        elif callback_query.data == 'buy_rar_pak':
            if user.balance < 100:
                await bot.answer_callback_query(text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç sex-coin üòî",
                                                callback_query_id=callback_query.id, show_alert=True)
            else:
                user.balance = user.balance - 100
                session.add(user)
                session.commit()
                poses = session.query(Poses).all()
                l = [0, 1, 3, 1]
                for elem in poses:
                    if session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(
                            Open_poses.pos_id == elem.pos_id).first() == None:
                        if l[elem.pos_lvl] != 0:
                            l[elem.pos_lvl] -= 1
                            ne = Open_poses()
                            ne.pos_id = elem.pos_id
                            ne.name = elem.name
                            ne.user_id = tg_id
                            ne.pos_level = elem.pos_lvl
                            ne.see = "False"
                            session.add(ne)
                            session.commit()
                await bot.answer_callback_query(text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ü•≥\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑—ã –≤ —Å–≤–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏",
                                                callback_query_id=callback_query.id, show_alert=True)
        elif callback_query.data == 'usual_pak':
            kl = InlineKeyboardMarkup(row_width=2)
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='pak_pose'),
                   InlineKeyboardButton('–ö—É–ø–∏—Ç—å (100 sex-coin)', callback_data='buy_usual_pak'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text="–û–±—ã—á–Ω–∞—è –∫–æ–ª–æ–¥–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑:\n    3 –ª–µ–≥–∫–∏–µ –ø–æ–∑—ã\n    1 —Å—Ä–µ–¥–Ω—è—è –ø–æ–∑–∞\n    1 —Ç—è–∂–µ–ª–∞—è –ø–æ–∑–∞",
                                        reply_markup=kl)
        elif callback_query.data == 'buy_usual_pak':
            if user.balance < 100:
                await bot.answer_callback_query(text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç sex-coin üòî",
                                                callback_query_id=callback_query.id, show_alert=True)
            else:
                user.balance = user.balance - 100
                session.add(user)
                session.commit()
                poses = session.query(Poses).all()
                l = [0, 3, 1, 1]
                for elem in poses:
                    if session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(
                            Open_poses.pos_id == elem.pos_id).first() == None:
                        if l[elem.pos_lvl] != 0:
                            l[elem.pos_lvl] -= 1
                            ne = Open_poses()
                            ne.pos_id = elem.pos_id
                            ne.name = elem.name
                            ne.user_id = tg_id
                            ne.pos_level = elem.pos_lvl
                            ne.see = "False"
                            session.add(ne)
                            session.commit()
                await bot.answer_callback_query(text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ü•≥\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑—ã –≤ —Å–≤–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏",
                                                callback_query_id=callback_query.id, show_alert=True)
        elif callback_query.data == 'spromo':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã üõí', callback_data='jpromo'))
            kl.add(InlineKeyboardButton("–ú–æ–∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã üíØ", callback_data='smy_promo'))
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–ü–æ—Å–º–æ—Ç—Ä–∏ —Å–≤–æ–∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã –∏–ª–∏ –∫—É–ø–∏ –Ω–æ–≤—ã–µ üÜï', reply_markup=kl)
        elif callback_query.data == 'promo':
            kl = InlineKeyboardMarkup()
            all_promo = session.query(Promocode).filter(Promocode.user_tg_id == None).all()
            mas = []
            for elem in all_promo:
                if elem.price not in mas:
                    mas.append(elem.price)
            mas = sorted(mas)
            for elem in mas:
                kl.add(InlineKeyboardButton(f'{elem} sex-coin', callback_data=f'buy_promo_{elem}'))
            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='store'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥, –∫—É—Ä—Å —Å–∫–∏–¥–∫–∏ 1 –∫ 1',
                                        parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
        elif callback_query.data == 'jpromo':
            kl = InlineKeyboardMarkup()
            all_promo = session.query(Promocode).filter(Promocode.user_tg_id == None).all()
            mas = []
            for elem in all_promo:
                if elem.price not in mas:
                    mas.append(elem.price)
            mas = sorted(mas)
            for elem in mas:
                kl.add(InlineKeyboardButton(f'{elem} sex-coin', callback_data=f'buy_promo_{elem}'))
            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='spromo'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥, –∫—É—Ä—Å —Å–∫–∏–¥–∫–∏ 1 –∫ 1',
                                        parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
        elif callback_query.data[0:len('buy_promo_')] == 'buy_promo_':
            coin = int(callback_query.data.split('_')[2])
            if user.balance < coin:
                await bot.answer_callback_query(text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç sex-coin üòî",
                                                callback_query_id=callback_query.id, show_alert=True)
            else:
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text="–°–º–æ—Ç—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤ –±–∞–∑–µ...")
                texx = buy_promocode(tg_id, coin)
                if texx == '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –Ω–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤!':
                    await bot.send_message(chat_id=tg_id, text=texx, parse_mode=ParseMode.MARKDOWN,
                                           reply_markup=InlineKeyboardMarkup().add(
                                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')))
                else:
                    await bot.send_message(chat_id=tg_id, text=texx, parse_mode=ParseMode.MARKDOWN)
                    await bot.send_message(chat_id=tg_id, text='–ñ–µ–ª–∞–µ–º –≤–∞–º —É–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!',
                                           reply_markup=InlineKeyboardMarkup().add(
                                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')))
        elif callback_query.data[0:len('open_present_')] == 'open_present_':
            pres_id = int(callback_query.data.split('_')[2])
            pres = session.query(Present).filter(Present.user_id == tg_id).filter(Present.present_id == pres_id).first()
            if pres.used == "True":
                await bot.answer_callback_query(text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å–µ–≥–æ–¥–Ω—è –≤—ã —É–∂–µ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ üòî",
                                                callback_query_id=callback_query.id, show_alert=True)
            else:
                pres.used = "True"
                session.add(pres)
                session.commit()
                if pres_id == 1:
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'–ú—ã –Ω–∞—á–∏–Ω–∞–µ–º –≤—ã—Å–∞–ª–∞—Ç—å –≤–∞–º –∫–∞—Ä—Ç–æ—á–∫–∏')
                    for __ in range(3):
                        poz = session.query(Poses).filter(Poses.pos_lvl == 1).all()
                        ran = random.randint(1, len(poz))
                        ch = 1
                        for elem in poz:
                            if ch == ran:
                                ot = elem
                                await bot.send_photo(tg_id, photo=poz.file_id,
                                                     caption=f"*{ot.name}*\n\n{ot.caption}",
                                                     parse_mode=ParseMode.MARKDOWN)
                                break
                            ch += 1
                    poz = session.query(Poses).filter(Poses.pos_lvl == 2).all()
                    ran = random.randint(1, len(poz))
                    ch = 1
                    for elem in poz:
                        if ch == ran:
                            ot = elem
                            await bot.send_photo(tg_id, photo=poz.file_id,
                                                 caption=f"*{ot.name}*\n\n{ot.caption}",
                                                 parse_mode=ParseMode.MARKDOWN)
                            break
                        ch += 1
                    poz = session.query(Poses).filter(Poses.pos_lvl == 3).all()
                    ran = random.randint(1, len(poz))
                    ch = 1
                    for elem in poz:
                        if ch == ran:
                            ot = elem
                            await bot.send_photo(tg_id, photo=poz.file_id,
                                                 caption=f"*{ot.name}*\n\n{ot.caption}",
                                                 parse_mode=ParseMode.MARKDOWN)
                            break
                        ch += 1
        elif callback_query.data == 'my_game':
            paid_game_lst = session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).all()
            kl = InlineKeyboardMarkup()
            for elem in paid_game_lst:
                game = session.query(Paid_game).filter(Paid_game.game_id == elem.game_id).first()
                kl.add(InlineKeyboardButton(game.game_name, callback_data=f'spaid_game_{game.game_id}'))
            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='game'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            if len(paid_game_lst) == 0:
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ–∫–∞ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –ø—É—Å—Ç üòî', reply_markup=kl)
            else:
                kl = InlineKeyboardMarkup()
                kl.add(InlineKeyboardButton('–ß—É—Å—Ç–≤–∞', callback_data='wpaid_game_1_b'))
                kl.add(InlineKeyboardButton('–°—Ç—Ä–∞—Å—Ç—å', callback_data='wpaid_game_2_b'))

                kl.add(InlineKeyboardButton('–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data='wpaid_game_4_b'))
                kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='game'),
                       InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text='–°–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –∏–≥—Ä:', reply_markup=kl)
        elif callback_query.data == 'smy_game':
            paid_game_lst = session.query(Purchased_game).filter(Purchased_game.user_id == tg_id).all()
            kl = InlineKeyboardMarkup()
            for elem in paid_game_lst:
                game = session.query(Paid_game).filter(Paid_game.game_id == elem.game_id).first()
                kl.add(InlineKeyboardButton(game.game_name, callback_data=f'spaid_game_{game.game_id}'))
            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='my_collection'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            if len(paid_game_lst) == 0:
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ–∫–∞ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä –ø—É—Å—Ç üòî', reply_markup=kl)
            else:
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text='–°–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –∏–≥—Ä:', reply_markup=kl)
        elif callback_query.data == 'zak_id':
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text=f"–ù–∞–ø–∏—à–∏—Ç–µ id –∑–∞–∫–∞–∑–∞ –∏ –º—ã –Ω–∞—á–∏—Å–ª–∏–º –≤–∞–º 10% sex-coin –æ—Ç —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞",
                                        reply_markup=InlineKeyboardMarkup().add(
                                            InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')))
            user.state = 'write_id'
            session.add(user)
            session.commit()
        elif callback_query.data[0:len('free_game_')] == 'free_game_':
            kl = InlineKeyboardMarkup(row_width=2)
            free_game_id = int(callback_query.data.split('_')[2])
            if free_game_id != 3:
                if free_game_id < 100:
                    paid_game = session.query(Free_game).filter(Free_game.game_id == free_game_id).first()
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='free_game'),
                           InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å üöÄ', callback_data=f'play_free_game_{free_game_id}'))
                    kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'*{beatufull_str(paid_game.game_name)}*\n\n{paid_game.game_caption}',
                                                parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                else:
                    free_game_id -= 100
                    paid_game = session.query(Paid_game).filter(Paid_game.game_id == free_game_id).first()
                    kl.add(InlineKeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ üßê", url=paid_game.detail),
                           InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å üöÄ', callback_data=f'play_free_game_{free_game_id + 100}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='free_game'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'*{beatufull_str(paid_game.game_name)}*\n\n{paid_game.game_caption}',
                                                parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            else:
                if len(callback_query.data.split('_')) == 4 and callback_query.data.split('_')[3] == 'p':
                    kl.add(InlineKeyboardButton('–ü–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏', callback_data='play_free_game_4_p'))
                    kl.add(InlineKeyboardButton('–í—ã–±–æ—Ä –ø–æ–∑ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏', callback_data='play_free_game_5_p'))
                    kl.add(InlineKeyboardButton('–°–ª—É—á–∞–π–Ω—ã–µ –ø–æ–∑—ã', callback_data='play_free_game_6_p'))
                    kl.add(InlineKeyboardButton('–ö–∞—Ä—Ç–æ—á–∫–∏ —Å–æ —Å–∫—Ä—ã—Ç–æ–π –ø–æ–∑–æ–π', callback_data='play_free_game_7_p'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='poses'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                else:
                    kl.add(InlineKeyboardButton('–ü–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏', callback_data='play_free_game_4_f'))
                    kl.add(InlineKeyboardButton('–í—ã–±–æ—Ä –ø–æ–∑ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏', callback_data='play_free_game_5_f'))
                    kl.add(InlineKeyboardButton('–°–ª—É—á–∞–π–Ω—ã–µ –ø–æ–∑—ã', callback_data='play_free_game_6_f'))
                    kl.add(InlineKeyboardButton('–ö–∞—Ä—Ç–æ—á–∫–∏ —Å–æ —Å–∫—Ä—ã—Ç–æ–π –ø–æ–∑–æ–π', callback_data='play_free_game_7_f'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='free_game'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑—ã üé≤', reply_markup=kl)
        elif callback_query.data[0:len('play_free_game_')] == 'play_free_game_':
            free_game_id = int(callback_query.data.split('_')[3])
            if free_game_id == 1:
                kl = InlineKeyboardMarkup()
                if len(callback_query.data.split('_')) == 4:
                    poz = session.query(Poses).filter(Poses.pos_id == day_pose_id).first()
                    f = int(poz.pos_lvl) * '‚≠êÔ∏è'
                    if user.take_pose != 'True':
                        kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data='play_free_game_1_0_0_0_0'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='play_free_game_1_0'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                    await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                         caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}', reply_markup=kl,
                                         parse_mode=ParseMode.MARKDOWN)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                elif len(callback_query.data.split('_')) == 8:

                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='play_free_game_1_0'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                    await bot.edit_message_reply_markup(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                        reply_markup=kl)
                    if user.take_pose != 'True':
                        await up_balance(tg_id, 5)
                    user.take_pose = 'True'
                else:
                    if callback_query.data.split('_')[4] == 'p':
                        poz = session.query(Poses).filter(Poses.pos_id == day_pose_id).first()
                        f = int(poz.pos_lvl) * '‚≠êÔ∏è'
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='_poses'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                        await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                             caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}', reply_markup=kl,
                                             parse_mode=ParseMode.MARKDOWN)
                        await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                    else:
                        free_game_id = 1
                        paid_game = session.query(Free_game).filter(Free_game.game_id == free_game_id).first()
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='free_game'),
                               InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å üöÄ', callback_data=f'play_free_game_{free_game_id}'))
                        kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                        await bot.send_message(chat_id=tg_id,
                                               text=f'*{beatufull_str(paid_game.game_name)}*\n\n{paid_game.game_caption}',
                                               parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                        await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
            elif free_game_id == 2:
                if len(callback_query.data.split('_')) == 8:

                    kl = InlineKeyboardMarkup()
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='free_game_2'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_reply_markup(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                        reply_markup=kl)
                    if user.podpiska != 'True':
                        await up_balance(tg_id, 5)
                    user.podpiska = 'True'
                else:
                    ran = day_task_id
                    woman = session.query(Paid_game_info_5).filter(Paid_game_info_5.id == ran).first()
                    man = session.query(Paid_game_info_5).filter(Paid_game_info_5.id == ran + 5).first()
                    kl = InlineKeyboardMarkup()
                    if user.podpiska != 'True':
                        kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data='play_free_game_2_0_0_0_0'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='free_game_2'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    if user.pol == 'man':
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text=f"*{woman.dop_info.split('_')[0]}*\n\n*{man.dop_info.split('_')[1]}*\n{man.caption}",
                                                    reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                    else:
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text=f"*{woman.dop_info.split('_')[0]}*\n\n*{man.dop_info.split('_')[1]}*\n{man.caption}",
                                                    reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
            elif free_game_id == 3:
                print('–ö–∞–∫ –≤—ã —Å—é–¥–∞ –ø–æ–ø–∞–ª–∏...')
            elif free_game_id == 4:
                if len(callback_query.data.split('_')) == 5:
                    b = callback_query.data.split('_')[4]
                    kl = InlineKeyboardMarkup(row_width=2)
                    f = '‚≠êÔ∏è'
                    kl.add(InlineKeyboardButton(f'1 —É—Ä–æ–≤–µ–Ω—å {f}', callback_data=f'play_free_game_4_1_{b}'))
                    kl.add(InlineKeyboardButton(f'2 —É—Ä–æ–≤–µ–Ω—å {f * 2}', callback_data=f'play_free_game_4_2_{b}'))
                    kl.add(InlineKeyboardButton(f'3 —É—Ä–æ–≤–µ–Ω—å {f * 3}', callback_data=f'play_free_game_4_3_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_3_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ ü§ü',
                                                message_id=callback_query.message.message_id, reply_markup=kl)
                elif len(callback_query.data.split('_')) == 6:
                    lvl = int(callback_query.data.split('_')[4])
                    b = callback_query.data.split('_')[5]
                    poses = session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter(
                        Open_poses.pos_level == lvl).all()
                    if len(poses) == 0:
                        await bot.answer_callback_query(
                            text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç—É –ø–æ–∑ —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è üòî\n–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ sex-coin –∏ –ø–æ–∫—É–ø–∞–π—Ç–µ –ø–∞–∫–∏ –∏–ª–∏ –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –±–æ—Ç–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —Ç—É—Ç –¥–∞—Ä—è—Ç –ø–æ–∑—ã",
                            callback_query_id=callback_query.id, show_alert=True)
                    else:

                        ch = random.randint(1, len(poses))
                        elem = -1
                        coun = 1
                        for el in poses:
                            if coun == ch:
                                elem = el
                                break
                            coun += 1
                        ran = elem.pos_id
                        poz = session.query(Poses).filter(Poses.pos_id == ran).first()
                        f = int(poz.pos_lvl) * '‚≠êÔ∏è'
                        kl = InlineKeyboardMarkup()
                        kl.add(InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚ùå", callback_data=f'play_free_game_4_{lvl}_{b}'),
                               InlineKeyboardButton("–í—ã–ø–æ–ª–Ω–∏—Ç—å ‚úÖ", callback_data=f'play_free_game_4_{lvl}_{b}_0_0'))
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'play_free_game_4_0_0_{b}'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                        await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                             caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}', reply_markup=kl,
                                             parse_mode=ParseMode.MARKDOWN)
                        await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                elif len(callback_query.data.split('_')) == 7:

                    b = callback_query.data.split('_')[6]
                    kl = InlineKeyboardMarkup(row_width=2)
                    f = '‚≠êÔ∏è'
                    kl.add(InlineKeyboardButton(f'1 —É—Ä–æ–≤–µ–Ω—å {f}', callback_data=f'play_free_game_4_1_{b}'))
                    kl.add(InlineKeyboardButton(f'2 —É—Ä–æ–≤–µ–Ω—å {f * 2}', callback_data=f'play_free_game_4_2_{b}'))
                    kl.add(InlineKeyboardButton(f'3 —É—Ä–æ–≤–µ–Ω—å {f * 3}', callback_data=f'play_free_game_4_3_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_3_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.send_message(chat_id=tg_id, text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ ü§ü', reply_markup=kl)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                elif len(callback_query.data.split('_')) == 8:
                    lvl = int(callback_query.data.split('_')[4])
                    b = callback_query.data.split('_')[5]
                    kl = InlineKeyboardMarkup()
                    kl.add(InlineKeyboardButton("–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚è≠", callback_data=f'play_free_game_4_{lvl}_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'play_free_game_4_0_0_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                    await bot.edit_message_reply_markup(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                        reply_markup=kl)
                    await up_balance(tg_id, 5)
            elif free_game_id == 6:
                kl = InlineKeyboardMarkup(row_width=2)
                if len(callback_query.data.split('_')) == 5:
                    poses = session.query(Open_poses).filter(Open_poses.user_id == tg_id).filter().all()
                    ch = random.randint(1, len(poses))
                    elem = -1
                    coun = 1
                    for el in poses:
                        if coun == ch:
                            elem = el
                            break
                        coun += 1
                    ran = elem.pos_id
                    poz = session.query(Poses).filter(Poses.pos_id == ran).first()
                    f = int(poz.pos_lvl) * '‚≠êÔ∏è'
                    b = callback_query.data.split('_')[4]
                    kl.add(
                        InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚ùå", callback_data=f'play_free_game_6_{b}'),
                        InlineKeyboardButton("–í—ã–ø–æ–ª–Ω–∏—Ç—å ‚úÖ", callback_data=f'play_free_game_6_{b}_0_0'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'play_free_game_6_0_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                    await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                         caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}', reply_markup=kl,
                                         parse_mode=ParseMode.MARKDOWN)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                elif len(callback_query.data.split('_')) == 6:
                    b = callback_query.data.split('_')[5]
                    kl.add(InlineKeyboardButton('–ü–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏', callback_data=f'play_free_game_4_{b}'))
                    kl.add(InlineKeyboardButton('–í—ã–±–æ—Ä –ø–æ–∑ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏', callback_data=f'play_free_game_5_{b}'))
                    kl.add(InlineKeyboardButton('–°–ª—É—á–∞–π–Ω—ã–µ –ø–æ–∑—ã', callback_data=f'play_free_game_6_{b}'))
                    kl.add(InlineKeyboardButton('–ö–∞—Ä—Ç–æ—á–∫–∏ —Å–æ —Å–∫—Ä—ã—Ç–æ–π –ø–æ–∑–æ–π', callback_data=f'play_free_game_7_{b}'))
                    if b == 'f':
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    else:
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'poses'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.send_message(chat_id=tg_id,
                                           text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑—ã üé≤', reply_markup=kl)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                elif len(callback_query.data.split('_')) == 7:
                    b = callback_query.data.split('_')[4]
                    kl.add(InlineKeyboardButton("–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚è≠", callback_data=f'play_free_game_6_{b}'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'play_free_game_6_0_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                    await bot.edit_message_reply_markup(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                        reply_markup=kl)
                    await up_balance(tg_id, 5)
            elif free_game_id == 7:
                kl = InlineKeyboardMarkup(row_width=2)
                if len(callback_query.data.split('_')) == 5:
                    b = callback_query.data.split('_')[4]
                    co = 0
                    kl.add(
                        InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 1 üôä",
                                             callback_data=f'play_free_game_7_-1_-1_-1_-1_-1_1_{b}'))
                    kl.add(
                        InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 2 ü§´",
                                             callback_data=f'play_free_game_7_-1_-1_-1_-1_-1_2_{b}'))
                    kl.add(
                        InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 3 ü§ê",
                                             callback_data=f'play_free_game_7_-1_-1_-1_-1_-1_3_{b}'))
                    kl.add(
                        InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 4 üôà",
                                             callback_data=f'play_free_game_7_-1_-1_-1_-1_-1_4_{b}'))
                    kl.add(
                        InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 5 ü§≠",
                                             callback_data=f'play_free_game_7_-1_-1_-1_-1_-1_5_{b}'))
                    kl.add(InlineKeyboardButton('–í—Å—ë —Å–¥–µ–ª–∞–Ω–æ ‚úÖ',
                                                callback_data=f'play_free_game_7_-1_-1_-1_-1_-1_{b}_{co}_-1'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_3_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text='–í –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ —É –≤–∞—Å –ø—è—Ç—å –∫–∞—Ä—Ç–æ—á–µ–∫, –≤ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∞, –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –≤—ã–ø–∞–ª–æ\n\n``` –ï—Å–ª–∏ –≤—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã, —Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è```',
                                                parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                elif len(callback_query.data.split('_')) == 12:
                    b = callback_query.data.split('_')[9]
                    co = int(callback_query.data.split('_')[10])
                    if co == 5:
                        ll = callback_query.data[0:len(callback_query.data) - 7]
                        he = callback_query.data.split('_')
                        kl = InlineKeyboardMarkup()
                        if he[4] == '-1':
                            kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 1 üôä", callback_data=ll + f'_1_{b}'))
                        else:
                            kl.add(InlineKeyboardButton(
                                session.query(Poses).filter(Poses.pos_id == int(he[4])).first().name + ' üóù',
                                callback_data=ll + f'_1_{b}_0_0'))
                        if he[5] == '-1':
                            kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 2 ü§´", callback_data=ll + f'_2_{b}'))
                        else:
                            kl.add(InlineKeyboardButton(
                                session.query(Poses).filter(Poses.pos_id == int(he[5])).first().name + ' üîë',
                                callback_data=ll + f'_2_{b}_0_0'))
                        if he[6] == '-1':
                            kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 3 ü§ê", callback_data=ll + f'_3_{b}'))
                        else:
                            kl.add(InlineKeyboardButton(
                                session.query(Poses).filter(Poses.pos_id == int(he[6])).first().name + ' üîß',
                                callback_data=ll + f'_3_{b}_0_0'))
                        if he[7] == '-1':
                            kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 4 üôà", callback_data=ll + f'_4_{b}'))
                        else:
                            kl.add(InlineKeyboardButton(
                                session.query(Poses).filter(Poses.pos_id == int(he[7])).first().name + ' üîê',
                                callback_data=ll + f'_4_{b}_0_0'))
                        if he[8] == '-1':
                            kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 5 ü§≠", callback_data=ll + f'_5_{b}'))
                        else:
                            kl.add(InlineKeyboardButton(
                                session.query(Poses).filter(Poses.pos_id == int(he[8])).first().name + ' üõ†',
                                callback_data=ll + f'_5_{b}_0_0'))
                        kl.add(InlineKeyboardButton('–ü–æ–º–µ–Ω—è—Ç—å –Ω–∞–±–æ—Ä üîÑ', callback_data=f'play_free_game_7_{b}'))
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_3_{b}'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                        if callback_query.data.split('_')[11] == '-1':
                            await bot.edit_message_reply_markup(chat_id=tg_id,
                                                                message_id=callback_query.message.message_id,
                                                                reply_markup=kl)
                            await up_balance(tg_id, 5)
                        else:
                            await bot.send_message(chat_id=tg_id,
                                                   text='–í –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ —É –≤–∞—Å –ø—è—Ç—å –∫–∞—Ä—Ç–æ—á–µ–∫, –≤ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∞, –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –≤—ã–ø–∞–ª–æ\n\n``` –ï—Å–ª–∏ –≤—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã, —Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è```',
                                                   parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                            await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                    elif co < 5:
                        await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                        text=f'–í–∞–º –Ω—É–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –µ—â—ë {5 - co} –∫–∞—Ä—Ç–æ—á–µ–∫ üÉè',
                                                        show_alert=True)
                elif len(callback_query.data.split('_')) == 10:
                    he = callback_query.data.split('_')
                    b = he[9]
                    co = 0
                    ll = callback_query.data[0:len(callback_query.data) - 2]
                    if he[4] == '-1':
                        kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 1 üôä", callback_data=ll + f'_1_{b}'))
                    else:
                        kl.add(InlineKeyboardButton(
                            session.query(Poses).filter(Poses.pos_id == int(he[4])).first().name + ' üóù',
                            callback_data=ll + f'_1_{b}'))
                        co += 1
                    if he[5] == '-1':
                        kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 2 ü§´", callback_data=ll + f'_2_{b}'))
                    else:
                        co += 1
                        kl.add(InlineKeyboardButton(
                            session.query(Poses).filter(Poses.pos_id == int(he[5])).first().name + ' üîë',
                            callback_data=ll + f'_2_{b}'))
                    if he[6] == '-1':
                        kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 3 ü§ê", callback_data=ll + f'_3_{b}'))
                    else:
                        co += 1
                        kl.add(InlineKeyboardButton(
                            session.query(Poses).filter(Poses.pos_id == int(he[6])).first().name + ' üîß',
                            callback_data=ll + f'_3_{b}'))
                    if he[7] == '-1':
                        kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 4 üôà", callback_data=ll + f'_4_{b}'))
                    else:
                        co += 1
                        kl.add(InlineKeyboardButton(
                            session.query(Poses).filter(Poses.pos_id == int(he[7])).first().name + ' üîê',
                            callback_data=ll + f'_4_{b}'))
                    if he[8] == '-1':
                        kl.add(InlineKeyboardButton("–°–µ–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–∑–∞ 5 ü§≠", callback_data=ll + f'_5_{b}'))
                    else:
                        co += 1
                        kl.add(InlineKeyboardButton(
                            session.query(Poses).filter(Poses.pos_id == int(he[8])).first().name + ' üõ†',
                            callback_data=ll + f'_5_{b}'))
                    kl.add(InlineKeyboardButton('–í—Å—ë —Å–¥–µ–ª–∞–Ω–æ ‚úÖ',
                                                callback_data=f'{ll}_{b}_{co}_-1'))
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_3_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.send_message(chat_id=tg_id,
                                           text='–í –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ —É –≤–∞—Å –ø—è—Ç—å –∫–∞—Ä—Ç–æ—á–µ–∫, –≤ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∞, –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –≤—ã–ø–∞–ª–æ\n\n``` –ï—Å–ª–∏ –≤—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã, —Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è```',
                                           parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                elif len(callback_query.data.split('_')) == 11:
                    he = callback_query.data.split('_')
                    ran = -1
                    tec = int(he[9])
                    b = he[10]
                    if he[tec + 3] == '-1':
                        if random.randint(1, 2) % 2 == 1:
                            poses = session.query(Open_poses).filter(Open_poses.user_id == tg_id).all()
                            ch = random.randint(1, len(poses))
                            elem = -1
                            coun = 1
                            for el in poses:
                                if coun == ch:
                                    elem = el
                                    break
                                coun += 1
                            ran = elem.pos_id
                        else:
                            ran = random.randint(1, 100)
                    else:
                        ran = int(he[tec + 3])
                    he[tec + 3] = str(ran)
                    poz = session.query(Poses).filter(Poses.pos_id == ran).first()
                    f = int(poz.pos_lvl) * '‚≠êÔ∏è'
                    kol = ''
                    for __ in range(len(he) - 3):
                        kol += he[__] + '_'
                    kol += he[-3]
                    kl.add(InlineKeyboardButton("–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚è≠", callback_data=kol + f'_{b}'))
                    kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                    await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                         caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}', reply_markup=kl,
                                         parse_mode=ParseMode.MARKDOWN)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                elif len(callback_query.data.split('_')) == 13:
                    he = callback_query.data.split('_')
                    ran = -1
                    tec = int(he[9])
                    b = he[10]
                    if he[tec + 3] == '-1':
                        if random.randint(1, 2) % 2 == 1:
                            poses = session.query(Open_poses).filter(Open_poses.user_id == tg_id).all()
                            ch = random.randint(1, len(poses))
                            elem = -1
                            coun = 1
                            for el in poses:
                                if coun == ch:
                                    elem = el
                                    break
                                coun += 1
                            ran = elem.pos_id
                        else:
                            ran = random.randint(1, 100)
                    else:
                        ran = int(he[tec + 3])
                    he[tec + 3] = str(ran)
                    poz = session.query(Poses).filter(Poses.pos_id == ran).first()
                    f = int(poz.pos_lvl) * '‚≠êÔ∏è'
                    kol = ''
                    # print(he)
                    for __ in range(len(he) - 4):
                        kol += he[__] + '_'
                    # kol += he[-3]
                    # print(')
                    # print(kol + f'{b}_5_5')
                    kl.add(InlineKeyboardButton("–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ ‚è≠", callback_data=kol + f'{b}_5_-5'))
                    kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                    await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                         caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}', reply_markup=kl,
                                         parse_mode=ParseMode.MARKDOWN)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
            elif free_game_id == 5:
                kl = InlineKeyboardMarkup()
                pom = callback_query.data.split('_')
                b = pom[-1]
                if len(pom) == 5:
                    sdfaa = 0
                    poses = session.query(Open_poses).filter(Open_poses.user_id == tg_id).all()
                    for elem in poses:
                        sdfaa += 1
                        kl.add(InlineKeyboardButton(elem.name, callback_data=f'play_free_game_5_{elem.pos_id}_{b}'))
                        if sdfaa == 10:
                            break
                    kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text='–í—ã–±–µ—Ä–∏—Ç–µ 1/2 –ø–æ–∑—É ‚è≥', reply_markup=kl)
                elif len(pom) == 6:
                    sdfaa = 0
                    poses = session.query(Open_poses).filter(Open_poses.user_id == tg_id).all()
                    for elem in poses:
                        sdfaa += 1
                        kl.add(
                            InlineKeyboardButton(elem.name, callback_data=callback_query.data[0:len(
                                callback_query.data) - 2] + f'_{elem.pos_id}_{b}'))
                        if sdfaa == 10:
                            break
                    kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text='–í—ã–±–µ—Ä–∏—Ç–µ 2/2 –ø–æ–∑—É ‚åõÔ∏è', reply_markup=kl)
                elif len(pom) == 7:
                    if random.randint(1, 2) == 1:
                        await bot.send_message(chat_id=tg_id, text='–ë–æ—Ç –≤—ã–±—Ä–∞–ª –ø–µ—Ä–≤—É—é –ø–æ–∑—É')
                        poz = session.query(Poses).filter(
                            Poses.pos_id == int(callback_query.data.split('_')[4])).first()
                        f = int(poz.pos_lvl) * '‚≠êÔ∏è'
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'play_free_game_5_0_0_0_0_{b}'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                        await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                             caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}', reply_markup=kl,
                                             parse_mode=ParseMode.MARKDOWN)
                    else:
                        await bot.send_message(chat_id=tg_id, text='–ë–æ—Ç –≤—ã–±—Ä–∞–ª –≤—Ç–æ—Ä—É—é –ø–æ–∑—É')
                        poz = session.query(Poses).filter(
                            Poses.pos_id == int(callback_query.data.split('_')[5])).first()
                        f = int(poz.pos_lvl) * '‚≠êÔ∏è'
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'play_free_game_5_0_0_0_0_{b}'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
                        await bot.send_photo(chat_id=tg_id, photo=poz.file_id,
                                             caption=f'*{poz.name}*{poz.caption}*–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {f}', reply_markup=kl,
                                             parse_mode=ParseMode.MARKDOWN)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                elif len(pom) == 9:
                    kl.add(InlineKeyboardButton('–ü–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏', callback_data=f'play_free_game_4_{b}'))
                    kl.add(InlineKeyboardButton('–í—ã–±–æ—Ä –ø–æ–∑ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏', callback_data=f'play_free_game_5_{b}'))
                    kl.add(InlineKeyboardButton('–°–ª—É—á–∞–π–Ω—ã–µ –ø–æ–∑—ã', callback_data=f'play_free_game_6_{b}'))
                    kl.add(InlineKeyboardButton('–ö–∞—Ä—Ç–æ—á–∫–∏ —Å–æ —Å–∫—Ä—ã—Ç–æ–π –ø–æ–∑–æ–π', callback_data=f'play_free_game_7_{b}'))
                    if b == 'f':
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='free_game'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    elif b == 'p':
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='poses'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                    await bot.send_message(chat_id=tg_id,
                                           text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑—ã üé≤', reply_markup=kl)
                    await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
            else:
                paid_game_id = free_game_id - 100
                if paid_game_id == 1:
                    if len(callback_query.data.split('_')) == 4:
                        # 1 –∏–≥—Ä–∞–µ—Ç 1, 2 –∏–≥—Ä–∞—é—Ç –≤–¥–≤–æ—ë–º
                        kl = InlineKeyboardMarkup(row_width=2)
                        kl.add(InlineKeyboardButton('–° –æ–¥–Ω–æ–≥–æ 1Ô∏è‚É£', callback_data=f'play_paid_game_{paid_game_id}_1'),
                               InlineKeyboardButton('–° –¥–≤—É—Ö 2Ô∏è‚É£', callback_data=f'play_paid_game_{paid_game_id}_2'))
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_{paid_game_id + 100}'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                        await bot.edit_message_text(
                            chat_id=tg_id, message_id=callback_query.message.message_id,
                            text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å, —Å –æ–¥–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º —Å –¥–≤—É—Ö üì≤",
                            reply_markup=kl)
                    else:
                        count_play = int(callback_query.data.split('_')[4])
                        if count_play == 2:
                            partner_phone_number = user.partner_phone_number
                            partner = session.query(User).filter(User.partner_phone_number == user.phone_number).filter(
                                User.phone_number == partner_phone_number).first()
                            if partner is None:
                                await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                                text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –º—ã –≤–∞–º –ø–æ–º–æ–∂–µ–º",
                                                                show_alert=True)
                            else:
                                user.state = 'write_wish'
                                partner.state = 'write_wish'
                                al = session.query(For_paid_game_info_1).all()
                                for elem in al:
                                    if elem.player1_id == tg_id or elem.player2_id == tg_id:
                                        elem.play = 0
                                        session.add(elem)
                                        session.commit()
                                new = For_paid_game_info_1()
                                new.game_id = 1
                                new.players = 2
                                new.player1_id = user.user_tg_id
                                new.player2_id = partner.user_tg_id
                                new.player1_count = 0
                                new.player2_count = 0
                                new.play_now = 0
                                new.play = 1
                                session.add(new)
                                session.add(partner)
                                session.add(user)
                                session.commit()
                                await bot.send_message(chat_id=partner.user_tg_id,
                                                       text="–í–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –ø–æ–∑–≤–∞–ª –≤–∞—Å –∏–≥—Ä–∞—Ç—å –≤ *–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ*\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ, –≤ —Å–ª—É—á–∞–µ –≤–∞—à–µ–π –ø–æ–±–µ–¥—ã, –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä—É",
                                                       parse_mode=ParseMode.MARKDOWN)
                                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                            text="–ò–≥—Ä–∞: *–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ* –Ω–∞—á–∞–ª–∞—Å—å\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ —Å–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ, –≤ —Å–ª—É—á–∞–µ –≤–∞—à–µ–π –ø–æ–±–µ–¥—ã, –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –µ–≥–æ —Ç–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É",
                                                            parse_mode=ParseMode.MARKDOWN)
                        elif count_play == 1:
                            await bot.edit_message_text(message_id=callback_query.message.message_id, chat_id=tg_id,
                                                        text="–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è –Ω–∞ –ª–∏—Å—Ç–æ—á–∫–µ, –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã –ø—Ä–æ–∏–≥—Ä–∞–≤—à–µ–º—É –¥–æ—Å—Ç–∞–Ω–µ—Ç—Å—è –∂–µ–ª–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ üìù")
                            al = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.play == 1).all()
                            for elem in al:
                                if elem.player1_id == tg_id or elem.player2_id == tg_id:
                                    elem.play = 0
                                    session.add(elem)
                                    session.commit()
                            new = For_paid_game_info_1()
                            new.game_id = 1
                            new.players = 1
                            new.player1_id = user.user_tg_id
                            new.player1_count = 0
                            new.player2_count = 0
                            new.play = 1
                            progress = session.query(Progress).filter(Progress.user_tg_id == int(tg_id)).filter(
                                Progress.gam_id == 1).first()
                            if progress is None:
                                new1 = Progress()
                                new1.gam_id = 1
                                new1.user_tg_id = int(tg_id)
                                new1.lvl = 1
                                session.add(new1)
                                session.commit()
                                ch = 1
                            else:
                                ch = (progress.lvl) % 50 + 1
                                progress.lvl = progress.lvl + 1
                            session.add(progress)
                            session.add(new)
                            session.commit()
                            vop = session.query(Paid_game_info_1).filter(Paid_game_info_1.id == ch).first()
                            kl = InlineKeyboardMarkup(row_width=2)
                            kl.add(InlineKeyboardButton(f'–¢–æ–ª—å–∫–æ {user.name}', callback_data='pl_1'),
                                   InlineKeyboardButton(f'–¢–æ–ª—å–∫–æ {user.partner_name}', callback_data='pl_2'))
                            kl.add(InlineKeyboardButton('–û–±–∞ –ø—Ä–∞–≤—ã üòé', callback_data='pl_3'),
                                   InlineKeyboardButton("–û–±–∞ –æ—à–∏–±–ª–∏—Å—å  üôä", callback_data='pl_4'))
                            await bot.send_message(chat_id=tg_id,
                                                   text=f"–û—Ç–≤–µ—Ç—å—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–º–µ—Ç—å—Ç–µ –∫—Ç–æ –∏–∑ –≤–∞—Å –ø—Ä–∞–≤ ‚úÖ\n\n{vop.caption}",
                                                   reply_markup=kl)
                elif paid_game_id == 2:
                    f = 0
                    if len(callback_query.data.split('_')) == 4:
                        partner = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                        if partner is None or user.partner_phone_number is None or partner.partner_phone_number != user.phone_number:
                            await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                            text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –º—ã –≤–∞–º –ø–æ–º–æ–∂–µ–º",
                                                            show_alert=True)
                        else:
                            finish_all_game(tg_id)
                            finish_all_game(partner.user_tg_id)
                            kl = InlineKeyboardMarkup(row_width=2)
                            kl.add(
                                InlineKeyboardButton(f'{beatufull_str(user.name)}', callback_data='play_paid_game_2_1'),
                                InlineKeyboardButton(f'{beatufull_str(user.partner_name)}',
                                                     callback_data='play_paid_game_2_2'))

                            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data=f'free_game_102'),
                                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                        text="–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ç–æ –∏–∑ –≤–∞—Å –Ω–∞—á–Ω—ë—Ç –∏–≥—Ä—É üéØ", reply_markup=kl)
                    elif len(callback_query.data.split('_')) == 5:
                        partner = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                        if partner is not None:
                            await bot.edit_message_text(text="–ò–≥—Ä–∞ *–ì–æ–≤–æ—Ä–∏ –∏–ª–∏ –ø–æ–¥—á–∏–Ω—è–π—Å—è* –Ω–∞—á–∞–ª–∞—Å—å",
                                                        message_id=callback_query.message.message_id, chat_id=tg_id,
                                                        parse_mode=ParseMode.MARKDOWN)
                            n = For_paid_game_info_2()
                            n.play = 1
                            n.player1_id = tg_id
                            n.player2_id = partner.user_tg_id
                            n.game_id = 2
                            n.player1_count = 0
                            n.player2_count = 0
                            c = int(callback_query.data.split('_')[4])
                            n.hwo_last = c
                            session.add(n)
                            session.commit()
                            gam = session.query(For_paid_game_info_2).filter(For_paid_game_info_2.play == 1).filter(
                                For_paid_game_info_2.player1_id == tg_id).filter(
                                For_paid_game_info_2.player2_id == partner.user_tg_id).filter(
                                For_paid_game_info_2.hwo_last == c).first()
                            if c == 1:
                                kl = InlineKeyboardMarkup(row_width=2)
                                kl.add(InlineKeyboardButton("–û—Ç–≤–µ—á–∞–π ü§ì", callback_data='play_paid_game_2_2_1_0'),
                                       InlineKeyboardButton("–í—ã–ø–æ–ª–Ω—è–π üí™", callback_data='play_paid_game_2_2_2_0'))
                                kl.add(InlineKeyboardButton('–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É ‚ùå', callback_data=f"break_2_{gam.id}"))
                                await bot.send_message(chat_id=tg_id,
                                                       text="–ò–≥—Ä–∞ *–ì–æ–≤–æ—Ä–∏ –∏–ª–∏ –ø–æ–¥—á–∏–Ω—è–π—Å—è*\n\n–°–µ–π—á–∞—Å –≤–∞—à —Ö–æ–¥ –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ, —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å",
                                                       reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                            elif c == 2:
                                kl = InlineKeyboardMarkup(row_width=2)
                                kl.add(InlineKeyboardButton("–û—Ç–≤–µ—á–∞–π ü§ì", callback_data='play_paid_game_2_1_1_0'),
                                       InlineKeyboardButton("–í—ã–ø–æ–ª–Ω—è–π üí™", callback_data='play_paid_game_2_1_2_0'))
                                kl.add(InlineKeyboardButton('–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É ‚ùå', callback_data=f"break_2_{gam.id}"))
                                await bot.send_message(chat_id=partner.user_tg_id,
                                                       text="–ò–≥—Ä–∞ *–ì–æ–≤–æ—Ä–∏ –∏–ª–∏ –ø–æ–¥—á–∏–Ω—è–π—Å—è*\n\n–°–µ–π—á–∞—Å –≤–∞—à —Ö–æ–¥ –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ, —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å",
                                                       reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
                    elif len(callback_query.data.split('_')) == 7:
                        partner = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                        c = int(callback_query.data.split('_')[4])
                        d = int(callback_query.data.split('_')[5])
                        await bot.edit_message_text(chat_id=tg_id, text='–í–∞—à–µ–º—É –ø–∞—Ä—Ç–Ω—ë—Ä—É –ø—Ä–∏—à–ª–æ –∑–∞–¥–∞–Ω–∏–µ',
                                                    message_id=callback_query.message.message_id)
                        ch = -1
                        gam = session.query(For_paid_game_info_2).filter(For_paid_game_info_2.play == 1).filter(
                            For_paid_game_info_2.player1_id == tg_id).filter(
                            For_paid_game_info_2.player2_id == partner.user_tg_id).first()
                        if gam is None:
                            gam = session.query(For_paid_game_info_2).filter(For_paid_game_info_2.play == 1).filter(
                                For_paid_game_info_2.player2_id == tg_id).filter(
                                For_paid_game_info_2.player1_id == partner.user_tg_id).first()
                            gam.player2_count += 3
                        else:
                            gam.player1_count += 3
                        if d == 1:
                            progress = session.query(Progress).filter(
                                Progress.user_tg_id == int(partner.user_tg_id)).filter(
                                Progress.gam_id == 2).filter(Progress.dop_info == '–í–æ–ø—Ä–æ—Å—ã').first()
                            if progress is None:
                                ch = 1
                                new = Progress()
                                new.lvl = 1
                                new.gam_id = 2
                                new.user_tg_id = partner.user_tg_id
                                new.dop_info = '–í–æ–ø—Ä–æ—Å—ã'
                                session.add(new)
                                session.commit()
                            else:
                                ch = progress.lvl % 25 + 1
                                progress.lvl = progress.lvl + 1
                                session.add(progress)
                                session.commit()
                        else:
                            progress = session.query(Progress).filter(
                                Progress.user_tg_id == int(partner.user_tg_id)).filter(
                                Progress.gam_id == 2).filter(Progress.dop_info == '–î–µ–π—Å—Ç–≤–∏—è').first()
                            if progress is None:
                                ch = 26
                                new = Progress()
                                new.lvl = 26
                                new.gam_id = 2
                                new.dop_info = '–î–µ–π—Å—Ç–≤–∏—è'
                                new.user_tg_id = partner.user_tg_id
                                session.add(new)
                                session.commit()
                            else:
                                if progress.lvl == 50:
                                    progress.lvl = 25
                                progress.lvl += 1
                                ch = progress.lvl
                                session.add(progress)
                                session.commit()
                        kl = InlineKeyboardMarkup(row_width=2)
                        kl.add(InlineKeyboardButton("–û—Ç–≤–µ—á–∞–π ü§ì", callback_data='play_paid_game_2_2_1_0'),
                               InlineKeyboardButton("–í—ã–ø–æ–ª–Ω—è–π üí™", callback_data='play_paid_game_2_2_2_0'))
                        kl.add(InlineKeyboardButton('–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É ‚ùå', callback_data=f"break_2_{gam.id}"))
                        game = session.query(Paid_game_info_2).filter(Paid_game_info_2.id == ch).first()
                        await bot.send_message(chat_id=partner.user_tg_id,
                                               text=f'*{game.dop_info}*\n\n{game.caption}\n\n–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å –≤–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –∏–≥—Ä—É',
                                               parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                elif paid_game_id == 7:
                    if len(callback_query.data.split('_')) == 4:
                        kl = InlineKeyboardMarkup(row_width=2)
                        kl.add(InlineKeyboardButton("–§–ª–∏—Ä—Ç üòè", callback_data=f'play_free_game_107_1'),
                               InlineKeyboardButton("C–±–ª–∏–∂–µ–Ω–∏–µ üîó", callback_data=f'play_free_game_107_2'))
                        kl.add(InlineKeyboardButton("–í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ ü§©", callback_data=f'play_free_game_107_3'),
                               InlineKeyboardButton("–†–∞–Ω–¥–æ–º üé≤", callback_data=f'play_free_game_107_4'))
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_107'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text="–í—ã–±–∏—Ä–∞–π—Ç–µ –∏–ª–∏ –¥–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∏ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤–µ—á–µ—Ä, –∞ –≤–µ—á–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∑–∞–ø–æ–º–Ω–∏—Ç–µ –Ω–∞–¥–æ–ª–≥–æ.",
                                                    reply_markup=kl)
                    elif len(callback_query.data.split('_')) == 5:
                        t = int(callback_query.data.split('_')[4])
                        ch = -1
                        if t <= 3:
                            ch = random.randint(0, 8) * 3 + t
                        else:
                            ch = random.randint(1, 27)
                        elem = session.query(Paid_game_info_7).filter(Paid_game_info_7.id == ch).first()
                        kl = InlineKeyboardMarkup(row_width=2)
                        kl.add(InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ', callback_data=callback_query.data + '_1'))
                        kl.add(InlineKeyboardButton("–§–ª–∏—Ä—Ç üòè", callback_data=f'play_free_game_107_1'),
                               InlineKeyboardButton("C–±–ª–∏–∂–µ–Ω–∏–µ üîó", callback_data=f'play_free_game_107_2'))
                        kl.add(InlineKeyboardButton("–í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ ü§©", callback_data=f'play_free_game_107_3'),
                               InlineKeyboardButton("–†–∞–Ω–¥–æ–º üé≤", callback_data=f'play_free_game_107_4'))
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_107'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text=f'*{elem.dop_info}*\n\n{elem.caption}', reply_markup=kl,
                                                    parse_mode=ParseMode.MARKDOWN)
                    elif len(callback_query.data.split('_')) == 6:
                        kl = InlineKeyboardMarkup(row_width=2)
                        kl.add(InlineKeyboardButton("–§–ª–∏—Ä—Ç üòè", callback_data=f'play_free_game_107_1'),
                               InlineKeyboardButton("C–±–ª–∏–∂–µ–Ω–∏–µ üîó", callback_data=f'play_free_game_107_2'))
                        kl.add(InlineKeyboardButton("–í–æ–∑–±—É–∂–¥–µ–Ω–∏–µ ü§©", callback_data=f'play_free_game_107_3'),
                               InlineKeyboardButton("–†–∞–Ω–¥–æ–º üé≤", callback_data=f'play_free_game_107_4'))
                        kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data=f'free_game_107'),
                               InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text="–í—ã–±–∏—Ä–∞–π—Ç–µ –∏–ª–∏ –¥–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∏ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤–µ—á–µ—Ä, –∞ –≤–µ—á–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∑–∞–ø–æ–º–Ω–∏—Ç–µ –Ω–∞–¥–æ–ª–≥–æ.",
                                                    reply_markup=kl)
                        await up_balance(tg_id, 2)
        elif callback_query.data[0:len('answ')] == 'answ':
            id = int(callback_query.data.split('_')[1])
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.id == id).first()
            gam.play_now = gam.play_now + 1
            answer = callback_query.data.split('_')[2]
            play_1 = True
            if int(gam.player2_id) == int(tg_id):
                play_1 = False
            if answer == 'y':
                if play_1:
                    gam.player2_count = gam.player2_count + 5
                else:
                    gam.player1_count = gam.player1_count + 5
            if gam.play_now == gam.players:
                gam.play_now = 0
                if play_1:
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'–í –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ —É –≤–∞—Å: *{gam.player1_count}* –æ—á–∫–æ–≤\n\n'
                                                     f'–£ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞: *{gam.player2_count}* –æ—á–∫–æ–≤\n\n'
                                                     f'–ü–æ–∫–∞ {excoduc(gam.player1_count, gam.player2_count)}',
                                                parse_mode=ParseMode.MARKDOWN)
                    await bot.send_message(chat_id=gam.player2_id, text=f'–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç –æ—Ç –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞\n\n'
                                                                        f'–í –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ —É –≤–∞—Å: *{gam.player2_count}* –æ—á–∫–æ–≤\n\n'
                                                                        f'–£ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞: *{gam.player1_count}* –æ—á–∫–æ–≤\n\n'
                                                                        f'–ü–æ–∫–∞ {excoduc(gam.player2_count, gam.player1_count)}',
                                           parse_mode=ParseMode.MARKDOWN)
                else:
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f'–í –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ —É –≤–∞—Å: *{gam.player2_count}* –æ—á–∫–æ–≤\n\n'
                                                     f'–£ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞: *{gam.player1_count}* –æ—á–∫–æ–≤\n\n'
                                                     f'–ü–æ–∫–∞ {excoduc(gam.player2_count, gam.player1_count)}',
                                                parse_mode=ParseMode.MARKDOWN)
                    await bot.send_message(chat_id=gam.player1_id, text=f'–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç –æ—Ç –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞\n\n'
                                                                        f'–í –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ —É –≤–∞—Å: *{gam.player1_count}* –æ—á–∫–æ–≤\n\n'
                                                                        f'–£ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞: *{gam.player2_count}* –æ—á–∫–æ–≤\n\n'
                                                                        f'–ü–æ–∫–∞ {excoduc(gam.player1_count, gam.player2_count)}',
                                           parse_mode=ParseMode.MARKDOWN)
                await bot.send_message(chat_id=gam.player1_id, text='–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É? üòâ',
                                       reply_markup=InlineKeyboardMarkup(row_width=2).add(
                                           InlineKeyboardButton('–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è üèÅ', callback_data=f'end_ans_{gam.id}'),
                                           InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚è≠", callback_data=f'next_ans_{gam.id}')))
            else:
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text=f'–ú—ã –≤—Å—ë –∑–∞–ø–∏—Å–∞–ª–∏, –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ‚åõÔ∏è')
            session.add(gam)
            session.commit()
        elif callback_query.data[0:len('end_ans_')] == 'end_ans_':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            id = int(callback_query.data.split('_')[2])
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.id == id).first()
            gam.play = 0
            if gam.player1_count == gam.player2_count:
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text=f"–£ –≤–∞—Å –Ω–∏—á—å—è ü•≥\n\n–í—ã –æ–±–∞ —É–≤–∏–¥–∏—Ç–µ –∑–∞–≥–∞–¥–∞–Ω–Ω—ã–µ –∂–µ–ª–∞–Ω–∏—è\n\n*–ñ–µ–ª–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞:* {gam.wish2}",
                                            parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                await bot.send_message(chat_id=gam.player2_id,
                                       text=f"–£ –≤–∞—Å –Ω–∏—á—å—è ü•≥\n\n–í—ã –æ–±–∞ —É–≤–∏–¥–∏—Ç–µ –∑–∞–≥–∞–¥–∞–Ω–Ω—ã–µ –∂–µ–ª–∞–Ω–∏—è\n\n*–ñ–µ–ª–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞:* {gam.wish1}",
                                       parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            elif gam.player1_count > gam.player2_count:
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text=f'–í—ã –ø–æ–±–µ–¥–∏–ª–∏ üéâ\n\n–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞—à–µ –∂–µ–ª–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä—É',
                                            reply_markup=kl)
                await bot.send_message(chat_id=gam.player2_id,
                                       text=f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üòî\n\n*–ñ–µ–ª–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞:* {gam.wish1}",
                                       parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            else:
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text=f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üòî\n\n*–ñ–µ–ª–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞:* {gam.wish2}",
                                            parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
                await bot.send_message(chat_id=gam.player2_id,
                                       text=f'–í—ã –ø–æ–±–µ–¥–∏–ª–∏ üéâ\n\n–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞—à–µ –∂–µ–ª–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä—É', reply_markup=kl)
            await up_balance(gam.player1_id, gam.player1_count)
            await up_balance(gam.player2_id, gam.player2_count)
            session.add(gam)
            session.commit()
        elif callback_query.data[0:len('next_ans_')] == 'next_ans_':
            id = int(callback_query.data.split('_')[2])
            gam = session.query(For_paid_game_info_1).filter(For_paid_game_info_1.id == id).first()
            user.state = 'answer_vop'
            part = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
            part.state = 'answer_vop'
            progress = session.query(Progress).filter(Progress.user_tg_id == int(gam.player1_id)).filter(
                Progress.gam_id == 1).first()
            if progress is None:
                new = Progress()
                new.gam_id = 1
                new.user_tg_id = int(gam.player1_id)
                new.lvl = 1
                session.add(new)
                session.commit()
                ch = 1
            else:
                ch = (progress.lvl) % 50 + 1
                progress.lvl = progress.lvl + 1
                session.add(progress)
            vop = session.query(Paid_game_info_1).filter(Paid_game_info_1.id == ch).first()
            kl = ReplyKeyboardMarkup(resize_keyboard=True)
            kl.add(KeyboardButton('–û—Ç–≤–µ—Ç–∏–ª –≤ –∂–∏–≤—É—é üìµ'))
            await bot.edit_message_text(chat_id=user.user_tg_id, message_id=callback_query.message.message_id,
                                        text=f'–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø—Ä—è–º–æ –≤ –±–æ—Ç–∞ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
            await bot.send_message(chat_id=part.user_tg_id,
                                   text=f'–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø—Ä—è–º–æ –≤ –±–æ—Ç–∞ (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
            await bot.send_message(chat_id=user.user_tg_id, text=f'*–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ*\n\n{vop.caption}',
                                   reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
            await bot.send_message(chat_id=part.user_tg_id, text=f'*–ê —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ*\n\n{vop.caption}',
                                   reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
            gam.play_now = 0
            gam.game_id_id = ch
            session.add(part)
            session.add(user)
            session.add(gam)
            session.commit()
        elif callback_query.data == 'add_phone':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home_'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–ú–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=kl)
            kl = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            kl.add(KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º ‚òéÔ∏è', request_contact=True))
            user.state = 'write_phone'
            await bot.send_message(chat_id=tg_id, text='–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=kl)
        elif callback_query.data == 'my_profile':
            kl = InlineKeyboardMarkup()
            kl.add(InlineKeyboardButton("–ü–æ–º–µ–Ω—è—Ç—å –∏–º—è üîÑ", callback_data='change_name'))
            if user.pol == 'man':
                kl.add(InlineKeyboardButton("–ú–æ–π –ø–∞—Ä—Ç–Ω—ë—Ä üë©", callback_data='partner'))
            else:
                kl.add(InlineKeyboardButton("–ú–æ–π –ø–∞—Ä—Ç–Ω—ë—Ä üë®", callback_data='partner'))
            if user.buy_all == "N":
                kl.add(InlineKeyboardButton('–ö—É–ø–∏—Ç—å –≤—Å—ë —á—Ç–æ –µ—Å—Ç—å ü§ë', callback_data='buy_all'))
            # kl.add(InlineKeyboardButton('–ü–æ–¥–∞—Ä–∫–∏ üéÅ', callback_data='present'))
            kl.add(InlineKeyboardButton("–ú–æ–∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã üíØ", callback_data='my_promo'))
            tex = f"*–í–∞—à–µ –∏–º—è:* {user.name}\n\n"
            if len(user.phone_number) == 0:
                tex += "*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω üî¥"
                kl.add(InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω ‚òéÔ∏è", callback_data='add_phone'))
            else:
                tex += "*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* –¥–æ–±–∞–≤–ª–µ–Ω üü¢"
            if user.partner_name == '–ø–∞—Ä—Ç–Ω—ë—Ä':
                tex += "\n\n*–ü–∞—Ä—Ç–Ω—ë—Ä:* –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω üî¥"
            else:
                tex += "\n\n*–ü–∞—Ä—Ç–Ω—ë—Ä:* –¥–æ–±–∞–≤–ª–µ–Ω üü¢"

            kl.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text=tex,
                                        reply_markup=kl, parse_mode=ParseMode.MARKDOWN)
        elif callback_query.data == 'partner':
            klpar = InlineKeyboardMarkup(row_width=2)
            if user.partner_phone_number == None:
                klpar.add(InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–∞ üòä', callback_data='add_partner'))
                klpar.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='my_profile'),
                          InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                            text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ üòî", reply_markup=klpar)
            else:
                klpar.add(InlineKeyboardButton('–û–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–∞ üîÑ', callback_data='add_partner'))
                klpar.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='my_profile'),
                          InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                par = session.query(User).filter(User.phone_number == user.partner_phone_number).first()
                if par is None:
                    if user.pol == 'man':
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text=f"–ü–∞—Ä—Ç–Ω—ë—Ä –ø–æ–∫–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ üò¢",
                                                    reply_markup=klpar)
                    else:
                        await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                    text=f"–ü–∞—Ä—Ç–Ω—ë—Ä –ø–æ–∫–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω üò¢",
                                                    reply_markup=klpar)
                else:
                    await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                                text=f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {par.phone_number}\n–ò–º—è: {beatufull_str(par.name)}",
                                                reply_markup=klpar)
        elif callback_query.data == 'buy_all':
            kl = InlineKeyboardMarkup(row_width=2)
            if user.buy_all == "N":
                kl.add(InlineKeyboardButton('–ö—É–ø–∏—Ç—å –≤—Å–µ üí≥ (990 —Ä—É–±–ª–µ–π)', callback_data='buy_alll'))
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='my_profile'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–ö—É–ø–∏—Ç–µ –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞ –∑–∞ 990 —Ä—É–±–ª–µ–π', reply_markup=kl)
        elif callback_query.data == 'add_partner':
            user.state = 'add_partner'
            session.add(user)
            session.commit()
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        reply_markup=InlineKeyboardMarkup().add(
                                            InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')),
                                        text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –≤ –æ–¥–Ω–æ–º –∏–∑ —Ñ–æ—Ä–º–∞—Ç–æ–≤:\n+79172665539\n89172665539')
        elif callback_query.data == 'change_name':
            user.state = 'write_name'
            session.add(user)
            session.commit()
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        reply_markup=InlineKeyboardMarkup().add(
                                            InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')),
                                        text='–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë –∏–º—è')
        elif callback_query.data == 'free_game':
            fre_games = session.query(Free_game).all()
            kl = InlineKeyboardMarkup()
            for elem in fre_games:
                if elem.game_id > 3:
                    break
                kl.add(InlineKeyboardButton(f"{elem.game_name}", callback_data=f"free_game_{elem.game_id}"))
            for i in [1, 2, 7]:
                elem = session.query(Paid_game).filter(Paid_game.game_id == i).first()
                kl.add(InlineKeyboardButton(f"{elem.game_name}", callback_data=f"free_game_{elem.game_id + 100}"))
            kl.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data='game'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–Ω—Ä–∞–≤–∏–≤—à—É—é—Å—è –∏–≥—Ä—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ üëÄ',
                                        reply_markup=kl)
        elif callback_query.data == 'top_up':
            kl = InlineKeyboardMarkup()
            co = 100
            ff = 50
            for i in range(10):
                if i != 0:
                    kl.add(InlineKeyboardButton(f'{co} sex-coin - {ff} —Ä—É–±–ª–µ–π',
                                                callback_data=f'tt_{i}'))
                co += 100
                ff += 50
            kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='store'),
                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ sex-coin, –∫—É—Ä—Å 1 —Ä—É–±–ª—å = 2 sex-coin',
                                        reply_markup=kl)
        elif callback_query.data[0:len('tt_')] == 'tt_':
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text="–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start")
            t = int(callback_query.data.split('_')[1])
            await bot.send_invoice(
                tg_id,
                title="–ü–æ–∫—É–ø–∫–∞ –≤–∞–ª—é—Ç—ã",
                description=f"{(t + 1) * 50 * 2} sex-coin –Ω–∞ –±–∞–ª–∞–Ω—Å –≤ AmateurBot",
                provider_token=payment_token,
                currency='rub',
                prices=[prices[t]],
                start_parameter=str(t),
                payload=str(tg_id) + f"_{(t + 1) * 50 * 2}")
        elif callback_query.data == 'buy_alll':
            await bot.edit_message_text(chat_id=tg_id, message_id=callback_query.message.message_id,
                                        text="–î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ /start")
            await bot.send_invoice(
                tg_id,
                title="–ü–æ–∫—É–ø–∫–∞ –≤—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞",
                description=f"–ü–æ–∫—É–ø–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä –∏ –ø–æ–∑ –≤ AmateurBot",
                provider_token=payment_token,
                currency='rub',
                prices=[PRICE_SUB],
                start_parameter=str(99),
                payload=str(tg_id) + f"_{99}")
        elif callback_query.data == 'my_promo':
            promo = session.query(Promocode).filter(Promocode.user_tg_id == tg_id).all()
            count = 1
            for elem in promo:
                await bot.send_message(chat_id=tg_id,
                                       text=f'{count}. **–ü—Ä–æ–º–æ–∫–æ–¥** –Ω–∞ **{elem.value}**, –¥–µ–π—Å—Ç–≤—É–µ—Ç **–æ—Ç {elem.minimum_price} —Ä—É–±–ª–µ–π**, –¥–µ–π—Å—Ç–≤—É–µ—Ç **–¥–æ {elem.end_date}**\n```{elem.code}```',
                                       parse_mode=ParseMode.MARKDOWN)
                count += 1
            if count == 1:
                await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç—É –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ üòî', show_alert=True)
            else:
                await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                kl = InlineKeyboardMarkup(row_width=2)
                kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='my_profile'),
                       InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                await bot.send_message(chat_id=tg_id, text='–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤', reply_markup=kl)
        elif callback_query.data == 'smy_promo':
            promo = session.query(Promocode).filter(Promocode.user_tg_id == tg_id).all()
            count = 1
            for elem in promo:
                await bot.send_message(chat_id=tg_id,
                                       text=f'{count}. **–ü—Ä–æ–º–æ–∫–æ–¥** –Ω–∞ **{elem.value}**, –¥–µ–π—Å—Ç–≤—É–µ—Ç **–æ—Ç {elem.minimum_price} —Ä—É–±–ª–µ–π**, –¥–µ–π—Å—Ç–≤—É–µ—Ç **–¥–æ {elem.end_date}**\n```{elem.code}```',
                                       parse_mode=ParseMode.MARKDOWN)
                count += 1
            if count == 1:
                await bot.answer_callback_query(callback_query_id=callback_query.id,
                                                text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç—É –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ üòî', show_alert=True)
            else:
                await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
                kl = InlineKeyboardMarkup(row_width=2)
                kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='spromo'),
                       InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                await bot.send_message(chat_id=tg_id, text='–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤', reply_markup=kl)
        elif callback_query.data[0:len('__paid_game_9')] == '__paid_game_9':
            callback_query.data = callback_query.data[2:]
            paid_game_id = int(callback_query.data.split('_')[2])
            paid_game = session.query(Paid_game).filter(Paid_game.game_id == paid_game_id).first()
            buy = False
            if session.query(Purchased_game).filter(Purchased_game.game_id == paid_game_id).filter(
                    Purchased_game.user_id == tg_id).first() != None:
                buy = True
            kl = InlineKeyboardMarkup(row_width=2)
            b = callback_query.data.split('_')[3]
            t = callback_query.data.split('_')[4]
            if buy:
                kl.add(InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ üßê', url=str(paid_game.detail)),
                       InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å üöÄ', callback_data=f'play_paid_game_{paid_game_id}_{t}_{b}'))
            else:
                kl.add(InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ üßê', url=str(paid_game.detail)),
                       InlineKeyboardButton('–ö—É–ø–∏—Ç—å (100 sex-coin)',
                                            callback_data=f'buy_paid_game_{paid_game_id}_{t}_{b}'))
            if len(callback_query.data.split('_')) == 5:
                t = callback_query.data.split('_')[3]
                if callback_query.data.split('_')[4] == 'b':
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô',
                                                callback_data=f'wpaid_game_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                elif callback_query.data.split('_')[4] == 'w':
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô',
                                                callback_data='_paid_game'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
                else:
                    kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô',
                                                callback_data=f'wpaid_game_{t}_{b}'),
                           InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            else:
                kl.add(InlineKeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='paid_game'),
                       InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home'))
            await bot.send_message(chat_id=tg_id,
                                   text=f'*{beatufull_str(paid_game.game_name)}*\n\n{paid_game.game_caption}',
                                   parse_mode=ParseMode.MARKDOWN, reply_markup=kl)
            await bot.delete_message(chat_id=tg_id, message_id=callback_query.message.message_id)
        elif callback_query.data == 'ras_yes':
            users = session.query(User).all()
            for elem in users:
                try:
                    await bot.send_message(chat_id=elem.user_tg_id, text=callback_query.message.text)
                except:
                    pass
    session.commit()
    session.close()


@dp.pre_checkout_query_handler(lambda query: True)
async def process_pre_checkout_query(pre_checkout_query: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


@dp.message_handler(content_types=ContentType.SUCCESSFUL_PAYMENT)
async def process_successful_payment(message: types.Message):
    pmnt = message.successful_payment.to_python()
    pmnt = pmnt["invoice_payload"].split("_")
    # print(pmnt[0], pmnt[1])
    # pmnt[0] - tg_id pmnt[1] - —á—Ç–æ –∏–º–µ–Ω–Ω–æ –æ–ø–ª–∞—Ç–∏–ª
    session = create_session()
    user = session.query(User).filter(User.user_tg_id == int(pmnt[0])).first()
    if int(pmnt[1]) != 99:
        user.balance += int(pmnt[1])
        session.add(user)
        session.commit()
        await bot.send_message(chat_id=message.chat.id,
                               text=f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n*{pmnt[1]} sex-coin* –ø–æ—Å—Ç—É–ø–∏–ª–∏ –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å",
                               parse_mode=ParseMode.MARKDOWN, reply_markup=InlineKeyboardMarkup().add(
                InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')))
    else:
        for i in range(11):
            paid_game_id = i + 1
            if paid_game_id == 6:
                if session.query(Purchased_game).filter(Purchased_game.user_id == user.user_tg_id).filter(
                        Purchased_game.game_id == 6).first() is None:
                    for i in range(20):
                        ne = For_paid_game_info_6()
                        ne.name = session.query(Paid_game_info_6).filter(Paid_game_info_6.id == i + 1).first().dop_info
                        ne.user_tg_id = int(message.chat.id)
                        ne.id_from_game = 6
                        ne.do = "No"
                        ne.id_from_game = 6
                        session.add(ne)
                        session.commit()
            new_paid_game = Purchased_game()
            new_paid_game.game_id = paid_game_id
            new_paid_game.user_id = int(user.user_tg_id)
            session.add(new_paid_game)
            session.commit()
        poses = session.query(Poses).all()
        for elem in poses:
            if session.query(Open_poses).filter(Open_poses.user_id == int(user.user_tg_id)).filter(
                    Open_poses.pos_id == elem.pos_id).first() is None:
                ne = Open_poses()
                ne.pos_id = elem.pos_id
                ne.name = elem.name
                ne.user_id = int(user.user_tg_id)
                ne.pos_level = elem.pos_lvl
                ne.see = "False"
                session.add(ne)
                session.commit()
        user.buy_all = 'Y'
        session.add(user)
        session.commit()
        await bot.send_message(chat_id=int(user.user_tg_id),
                               text='–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ü–æ–ª—å–∑—É–π—Ç–µ—Å—å –≤—Å–µ–º —á—Ç–æ –µ—Å—Ç—å –≤ –±–æ—Ç–µ',
                               reply_markup=InlineKeyboardMarkup().add(
                                   InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°', callback_data='home')))
    session.commit()
    session.close()


async def hurryz():
    session = create_session()
    global day_pose_id
    global day_task_id
    day_pose_id = random.randint(1, 100)
    cur = random.randint(1, 3)
    if cur == 1:
        day_task_id = random.randint(1, 5)
    elif cur == 2:
        day_task_id = random.randint(11, 15)
    else:
        day_task_id = random.randint(21, 25)
    users = session.query(User).all()
    for i in users:
        i.zar_today = 0
        i.take_pose = 'False'
        i.podpiska = 'False'
        session.add(i)
        session.commit()
    get_promocodes()
    update_orders()
    session.commit()
    session.close()


async def scheduler():
    aioschedule.every().day.at('00:00').do(hurryz)
    while True:
        await asyncio.sleep(1)
        await aioschedule.run_pending()


async def on_startup(x):
    asyncio.create_task(scheduler())


if __name__ == '__main__':
    global_init("db.sqlite")
    # get_promocodes()
    # update_orders()
    start_polling(dp, on_startup=on_startup)
